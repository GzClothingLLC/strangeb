{"version":3,"sources":["webpack:///static/app.fe28b6e5dd3f8a8b57b7.js","webpack:///webpack/bootstrap 24eba623599016d13d9b","webpack:///./src/main.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/panzoom/lib/getTransform.js","webpack:///./~/babel-runtime/core-js/object/create.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/core-js/library/modules/_object-keys.js","webpack:///./src/lib/appState.js","webpack:///./~/core-js/library/modules/_defined.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/core-js/library/modules/_iobject.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./~/core-js/library/modules/_shared-key.js","webpack:///./~/core-js/library/modules/_to-integer.js","webpack:///./~/core-js/library/modules/_to-iobject.js","webpack:///./~/core-js/library/modules/_to-object.js","webpack:///./~/simplesvg/index.js","webpack:///./~/add-event-listener/index.js","webpack:///./~/amator/index.js","webpack:///./src/lib/curve.js","webpack:///./src/lib/queryHelper.js","webpack:///./src/lib/renderer.js","webpack:///App.vue","webpack:///Scene.vue","webpack:///./~/babel-runtime/core-js/object/assign.js","webpack:///./~/babel-runtime/core-js/object/keys.js","webpack:///./~/bezier-easing/src/index.js","webpack:///./~/core-js/library/fn/object/assign.js","webpack:///./~/core-js/library/fn/object/create.js","webpack:///./~/core-js/library/fn/object/keys.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_array-includes.js","webpack:///./~/core-js/library/modules/_cof.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_html.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_object-assign.js","webpack:///./~/core-js/library/modules/_object-create.js","webpack:///./~/core-js/library/modules/_object-dps.js","webpack:///./~/core-js/library/modules/_object-gops.js","webpack:///./~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/core-js/library/modules/_object-pie.js","webpack:///./~/core-js/library/modules/_object-sap.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_shared.js","webpack:///./~/core-js/library/modules/_to-index.js","webpack:///./~/core-js/library/modules/_to-length.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/_uid.js","webpack:///./~/core-js/library/modules/es6.object.assign.js","webpack:///./~/core-js/library/modules/es6.object.create.js","webpack:///./~/core-js/library/modules/es6.object.keys.js","webpack:///./~/panzoom/index.js","webpack:///./~/panzoom/lib/createEvent.js","webpack:///./~/panzoom/lib/kinetic.js","webpack:///./~/panzoom/lib/moveBy.js","webpack:///./~/panzoom/lib/moveTo.js","webpack:///./~/panzoom/lib/zoomTo.js","webpack:///./~/simplesvg/lib/compile.js","webpack:///./~/simplesvg/lib/compile_template.js","webpack:///./~/simplesvg/lib/domparser.js","webpack:///./src/App.vue?d818","webpack:///./src/Scene.vue?4e01","webpack:///./src/App.vue","webpack:///./src/Scene.vue","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/wheel/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","el","components","App","core","version","__e","Object","defineProperty","get","a","exec","e","global","window","Math","self","Function","__g","getTransform","svgElement","baseVal","transform","numberOfItems","getItem","owner","ownerSVGElement","createSVGTransform","appendItem","isObject","it","TypeError","ctx","hide","PROTOTYPE","$export","type","name","source","key","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","expProto","target","undefined","C","b","this","arguments","length","apply","virtual","R","U","$keys","enumBugKeys","keys","O","createState","animation","setStateFromHash","ignoreNextHashChange","hash","location","parsed","_queryHelper2","parse","state","defaultKeys","forEach","push","code","search","defaultState","setHashFromState","bag","_create2","item","currentHash","replace","value","_create","_queryHelper","x0","y0","x1","y1","x2","y2","x3","y3","document","is","createElement","split","cof","propertyIsEnumerable","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","Attributes","shared","uid","ceil","floor","isNaN","IObject","defined","svg","element","attrBag","augment","attr","dataSource","model","compiledTempalte","compileTemplate","link","on","cb","useCapture","domEvents","addEventListener","off","removeEventListener","append","content","child","appendChild","setAttributeNS","removeAttributeNS","getAttributeNS","Error","attributes","i","attributeName","xlinkns","text","textContent","createElementNS","svgns","simplesvg","compile","eventName","listener","Events","add","stdAttach","rm","stdDetach","oldIEAttach","oldIEDetach","attachEvent","detachEvent","animate","options","cancel","scheduler","previousAnimationId","loop","t","easing","frame","durationInFrames","setValues","next","step","setTimeout","done","diff","start","create","animations","console","warn","ease","noop","getScheduler","durationInMs","duration","max","canRaf","requestAnimationFrame","rafScheduler","timeoutScheduler","bind","cancelAnimationFrame","clearTimeout","BezierEasing","easeIn","easeOut","easeInOut","linear","Curve","from","to","func","alpha","angleStep","PI","qs","empty","parts","match","keyValuePair","part","decodeURIComponent","path","_keys2","map","encodeURIComponent","join","_keys","queryHelper","createRenderer","scene","functions","recompile","newCompiledFunction","compileFunctions","_assign2","compiledFunctions","lastRaf","data","curves","toDataCurve","moveCurve","curve","fromUI","cx","cy","toUI","getPanzoom","zoomer","dispose","initCurves","count","makeUI","x","y","color","ui","r","fill","panzoom","stroke","stroke-opacity","all","result","compileOne","definition","safeCheck","safe","compiledFunction","_assign","_Scene","_Scene2","_appState","_appState2","Scene","_renderer","_renderer2","props","methods","updateAnimation","error","renderer","ready","$els","container","moveBy","clientWidth","clientHeight","destroyed","A","aA1","aA2","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","abs","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","NEWTON_MIN_SLOPE","kSplineTableSize","kSampleStepSize","float32ArraySupported","Float32Array","mY1","mY2","getTForX","intervalStart","currentSample","lastSample","sampleValues","dist","guessForT","initialSlope","Array","assign","$Object","D","toIObject","toLength","toIndex","IS_INCLUDES","$this","fromIndex","index","toString","slice","aFunction","fn","that","hasOwnProperty","createDesc","object","documentElement","getKeys","gOPS","pIE","toObject","$assign","Symbol","K","k","T","aLen","getSymbols","isEnum","concat","j","dPs","IE_PROTO","Empty","createDict","iframeDocument","iframe","gt","style","display","src","contentWindow","open","write","close","Properties","defineProperties","getOwnPropertySymbols","has","arrayIndexOf","names","fails","KEY","exp","bitmap","enumerable","configurable","writable","SHARED","store","toInteger","min","val","valueOf","px","random","createPanZoom","centerOn","parent","clientRect","getBoundingClientRect","left","width","top","height","dx","dy","internalMoveBy","smooth","previousAnimation","lastX","lastY","v","scroll","moveTo","wheel","removeWheelListener","onMouseWheel","onMouseDown","smoothScroll","releaseDocumentMouse","releaseTouches","triggerPanEnd","listenForEvents","onTouch","addWheelListener","touches","handleSignleFingerTouch","stopPropagation","preventDefault","pinchZoomLength","getPinchZoomLength","touch","mouseX","clientX","mouseY","clientY","touchInProgress","handleTouchMove","handleTouchEnd","triggerPanStart","t1","t2","currentPinchLength","delta","scaleMultiplier","getScaleMultiplier","zoomTo","finger1","finger2","isLeftButton","button","event","onMouseMove","onMouseUp","dragObject","srcElement","prevSelectStart","onselectstart","prevDragStart","ondragstart","disabled","panstartFired","beforeWheel","deltaY","speed","triggerEvent","stop","createEvent","dispatchEvent","elementValid","SVGElement","kinetic","isIE","evt","initCustomEvent","Event","clearInterval","ticker","raf","lastRect","getRect","ax","ay","vx","vy","timestamp","Date","setInterval","track","now","elapsed","rect","dt","targetX","targetY","minVelocity","amplitude","autoScroll","moving","timeConstant","matrix","setAttribute","d","parentCTM","getScreenCTM","scale","svgText","addNamespaces","parser","parseFromString","namespaces","tagLength","substr","template","domNode","allBindings","extractAllBindings","changeModel","setter","nodeType","typeSupported","hasChildNodes","domChildren","childNodes","bindTextContent","attrs","bindDomAttribute","domAttribute","attributeSetter","attrName","modelPropertyName","modelNameMatch","BINDING_EXPR","localName","isSimpleValue","indexOf","propertyBindings","textSetter","nodeValue","createDomparser","DOMParser","fail","__vue_script__","__vue_template__","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","isLiteral","literalValueRE","test","isReserved","str","charCodeAt","_toString","toNumber","Number","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","l","toArray","list","ret","extend","isPlainObject","OBJECT_STRING","def","_debounce","wait","timeout","args","context","later","last","arr","cancellable","cancelled","looseEqual","JSON","stringify","Cache","limit","size","head","tail","_keymap","pushFilter","filter","lastFilterIndex","trim","tokens","filterTokenRE","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","config","delimiters","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","querySelector","inDoc","node","doc","parentNode","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","getClass","classname","className","setClass","cls","isIE9","namespaceURI","addClass","classList","cur","removeClass","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","childOb","depend","newVal","initMixin","prototype","_init","$el","$root","$children","$refs","_watchers","_directives","_uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","circular","waiting","flushBatcherQueue","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","preventFilter","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","kebab","camelPrefixes","normalize$1","_key","callActivateHooks","called","total","compileProps","propOptions","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","typeCache","isHidden","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","shift","entry","newer","older","returnEntry","freeze","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","capture","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","toFixed","_int","_float","sign","pluralize","delay","elem","callback","_addWheelListener","support","_removeWheelListener","_addEventListener","originalEvent","deltaMode","deltaX","delatZ","returnValue","stopImmediatePropagation","wheelDelta","wheelDeltaX","detail","_removeEventListener","detectEventModel","onmousewheel"],"mappings":"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","file":"static/app.fe28b6e5dd3f8a8b57b7.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(74);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(72);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t  el: 'body',\n\t  components: { App: _App2.default }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(3)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Returns transformation matrix for an element. If no such transformation matrix\n\t * exist - a new one is created.\n\t */\n\tmodule.exports = getTransform\n\t\n\tfunction getTransform(svgElement) {\n\t  var baseVal = svgElement.transform.baseVal\n\t  if (baseVal.numberOfItems) return baseVal.getItem(0)\n\t\n\t  var owner = svgElement.ownerSVGElement || svgElement\n\t  var transform = owner.createSVGTransform()\n\t  svgElement.transform.baseVal.appendItem(transform)\n\t\n\t  return transform\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(33), __esModule: true };\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(9);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(4)\n\t  , core      = __webpack_require__(1)\n\t  , ctx       = __webpack_require__(38)\n\t  , hide      = __webpack_require__(40)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , expProto  = exports[PROTOTYPE]\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(a, b, c){\n\t        if(this instanceof C){\n\t          switch(arguments.length){\n\t            case 0: return new C;\n\t            case 1: return new C(a);\n\t            case 2: return new C(a, b);\n\t          } return new C(a, b, c);\n\t        } return C.apply(this, arguments);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\t    if(IS_PROTO){\n\t      (exports.virtual || (exports.virtual = {}))[key] = out;\n\t      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\t      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n\t    }\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library` \n\tmodule.exports = $export;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\r\n\tvar $keys       = __webpack_require__(47)\r\n\t  , enumBugKeys = __webpack_require__(14);\r\n\t\r\n\tmodule.exports = Object.keys || function keys(O){\r\n\t  return $keys(O, enumBugKeys);\r\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.setHashFromState = exports.setStateFromHash = undefined;\n\t\n\tvar _create = __webpack_require__(6);\n\t\n\tvar _create2 = _interopRequireDefault(_create);\n\t\n\tvar _queryHelper = __webpack_require__(25);\n\t\n\tvar _queryHelper2 = _interopRequireDefault(_queryHelper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ignoreNextHashChange = false;\n\tvar state = createState();\n\t\n\tvar defaultState = {\n\t  x0: '100 * Math.cos(from)',\n\t  y0: '100 * Math.sin(from)',\n\t  x1: '130 * Math.cos(from + alpha)',\n\t  y1: '130 * Math.sin(from + alpha)',\n\t  x2: '130 * Math.cos(to - alpha)',\n\t  y2: '130 * Math.sin(to - alpha)',\n\t  x3: '100 * Math.cos(to)',\n\t  y3: '100 * Math.sin(to)'\n\t};\n\t\n\tvar defaultKeys = ['x0', 'y0', 'x1', 'y1', 'x2', 'y2', 'x3', 'y3'];\n\t\n\tsetStateFromHash();\n\t\n\texports.default = state;\n\texports.setStateFromHash = setStateFromHash;\n\texports.setHashFromState = setHashFromState;\n\t\n\t\n\tfunction createState() {\n\t  return {\n\t    animation: []\n\t  };\n\t}\n\t\n\tfunction setStateFromHash() {\n\t  if (ignoreNextHashChange) {\n\t    ignoreNextHashChange = false;\n\t    return;\n\t  }\n\t\n\t  if (typeof window !== 'undefined') {\n\t    (function () {\n\t      var hash = window.location.hash;\n\t      var parsed = _queryHelper2.default.parse(hash);\n\t      state.animation.length = 0;\n\t\n\t      defaultKeys.forEach(function (name) {\n\t        state.animation.push({\n\t          name: name,\n\t          code: parsed.search[name] || defaultState[name]\n\t        });\n\t      });\n\t    })();\n\t  }\n\t}\n\t\n\tfunction setHashFromState() {\n\t  var animation = state.animation;\n\t  var bag = (0, _create2.default)(null);\n\t\n\t  animation.forEach(function (item) {\n\t    bag[item.name] = item.code;\n\t  });\n\t\n\t  var hash = '#/?' + _queryHelper2.default.search(bag);\n\t\n\t  var currentHash = window.location.hash;\n\t  if (currentHash !== hash) {\n\t    ignoreNextHashChange = true;\n\t    window.location.replace(hash);\n\t  }\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(9)\n\t  , document = __webpack_require__(4).document\n\t  // in old IE typeof document.createElement is 'object'\n\t  , is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function(it){\n\t  return is ? document.createElement(it) : {};\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t// IE 8- don't enum bug keys\r\n\tmodule.exports = (\r\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\r\n\t).split(',');\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(37);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject       = __webpack_require__(7)\n\t  , IE8_DOM_DEFINE = __webpack_require__(42)\n\t  , toPrimitive    = __webpack_require__(54)\n\t  , dP             = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(2) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return dP(O, P, Attributes);\n\t  } catch(e){ /* empty */ }\n\t  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n\t  if('value' in Attributes)O[P] = Attributes.value;\n\t  return O;\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(51)('keys')\r\n\t  , uid    = __webpack_require__(55);\r\n\tmodule.exports = function(key){\r\n\t  return shared[key] || (shared[key] = uid(key));\r\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(15)\n\t  , defined = __webpack_require__(12);\n\tmodule.exports = function(it){\n\t  return IObject(defined(it));\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(12);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = svg;\n\t\n\tsvg.compile = __webpack_require__(67);\n\t\n\tvar compileTemplate = svg.compileTemplate = __webpack_require__(68);\n\t\n\tvar domEvents = __webpack_require__(22);\n\t\n\tvar svgns = \"http://www.w3.org/2000/svg\";\n\tvar xlinkns = \"http://www.w3.org/1999/xlink\";\n\t\n\tfunction svg(element, attrBag) {\n\t  var svgElement = augment(element);\n\t  if (attrBag === undefined) {\n\t    return svgElement;\n\t  }\n\t\n\t  svgElement.attr(attrBag);\n\t\n\t  return svgElement;\n\t}\n\t\n\tfunction augment(element) {\n\t  var svgElement = element;\n\t\n\t  if (typeof element === \"string\") {\n\t    svgElement = window.document.createElementNS(svgns, element);\n\t  } else if (element.simplesvg) {\n\t    return element;\n\t  }\n\t\n\t  var compiledTempalte;\n\t\n\t  svgElement.simplesvg = true; // this is not good, since we are monkey patching svg\n\t  svgElement.attr = attr;\n\t  svgElement.append = append;\n\t  svgElement.link = link;\n\t  svgElement.text = text;\n\t\n\t  // add easy eventing\n\t  svgElement.on = on;\n\t  svgElement.off = off;\n\t\n\t  // data binding:\n\t  svgElement.dataSource = dataSource;\n\t\n\t  return svgElement;\n\t\n\t  function dataSource(model) {\n\t    if (!compiledTempalte) compiledTempalte = compileTemplate(svgElement);\n\t    compiledTempalte.link(model);\n\t    return svgElement;\n\t  }\n\t\n\t  function on(name, cb, useCapture) {\n\t    domEvents.addEventListener(svgElement, name, cb, useCapture);\n\t    return svgElement;\n\t  }\n\t\n\t  function off(name, cb, useCapture) {\n\t    domEvents.removeEventListener(svgElement, name, cb, useCapture);\n\t    return svgElement;\n\t  }\n\t\n\t  function append(content) {\n\t    var child = svg(content);\n\t    svgElement.appendChild(child);\n\t\n\t    return child;\n\t  }\n\t\n\t  function attr(name, value) {\n\t    if (arguments.length === 2) {\n\t      if (value !== null) {\n\t        svgElement.setAttributeNS(null, name, value);\n\t      } else {\n\t        svgElement.removeAttributeNS(null, name);\n\t      }\n\t\n\t      return svgElement;\n\t    }\n\t    if (typeof name === 'string') {\n\t      // someone wants to get value of an attribute:\n\t      return svgElement.getAttributeNS(null, name);\n\t    }\n\t\n\t    if (typeof name !== 'object') throw new Error('attr() expects to have either string or object as first argument');\n\t\n\t    var attrBag = name;\n\t    var attributes = Object.keys(attrBag);\n\t    for (var i = 0; i < attributes.length; ++i) {\n\t      var attributeName = attributes[i];\n\t      var value = attrBag[attributeName];\n\t      if (attributeName === 'link') {\n\t        svgElement.link(value);\n\t      } else {\n\t        svgElement.attr(attributeName, value);\n\t      }\n\t    }\n\t\n\t    return svgElement;\n\t  }\n\t\n\t  function link(target) {\n\t    if (arguments.length) {\n\t      svgElement.setAttributeNS(xlinkns, \"xlink:href\", target);\n\t      return svgElement;\n\t    }\n\t\n\t    return svgElement.getAttributeNS(xlinkns, \"xlink:href\");\n\t  }\n\t\n\t  function text(textContent) {\n\t    if (textContent !== undefined) {\n\t        svgElement.textContent = textContent;\n\t        return svgElement;\n\t    }\n\t    return svgElement.textContent;\n\t  }\n\t}\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\taddEventListener.removeEventListener = removeEventListener\n\taddEventListener.addEventListener = addEventListener\n\t\n\tmodule.exports = addEventListener\n\t\n\tvar Events = null\n\t\n\tfunction addEventListener(el, eventName, listener, useCapture) {\n\t  Events = Events || (\n\t    document.addEventListener ?\n\t    {add: stdAttach, rm: stdDetach} :\n\t    {add: oldIEAttach, rm: oldIEDetach}\n\t  )\n\t  \n\t  return Events.add(el, eventName, listener, useCapture)\n\t}\n\t\n\tfunction removeEventListener(el, eventName, listener, useCapture) {\n\t  Events = Events || (\n\t    document.addEventListener ?\n\t    {add: stdAttach, rm: stdDetach} :\n\t    {add: oldIEAttach, rm: oldIEDetach}\n\t  )\n\t  \n\t  return Events.rm(el, eventName, listener, useCapture)\n\t}\n\t\n\tfunction stdAttach(el, eventName, listener, useCapture) {\n\t  el.addEventListener(eventName, listener, useCapture)\n\t}\n\t\n\tfunction stdDetach(el, eventName, listener, useCapture) {\n\t  el.removeEventListener(eventName, listener, useCapture)\n\t}\n\t\n\tfunction oldIEAttach(el, eventName, listener, useCapture) {\n\t  if(useCapture) {\n\t    throw new Error('cannot useCapture in oldIE')\n\t  }\n\t\n\t  el.attachEvent('on' + eventName, listener)\n\t}\n\t\n\tfunction oldIEDetach(el, eventName, listener, useCapture) {\n\t  el.detachEvent('on' + eventName, listener)\n\t}\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar BezierEasing = __webpack_require__(31)\n\t\n\t// Predefined set of animations. Similar to CSS easing functions\n\tvar animations = {\n\t  ease:  BezierEasing(0.25, 0.1, 0.25, 1),\n\t  easeIn: BezierEasing(0.42, 0, 1, 1),\n\t  easeOut: BezierEasing(0, 0, 0.58, 1),\n\t  easeInOut: BezierEasing(0.42, 0, 0.58, 1),\n\t  linear: BezierEasing(0, 0, 1, 1)\n\t}\n\t\n\t\n\tmodule.exports = animate;\n\t\n\tfunction animate(source, target, options) {\n\t  var start= Object.create(null)\n\t  var diff = Object.create(null)\n\t  options = options || {}\n\t  // We let clients specify their own easing function\n\t  var easing = (typeof options.easing === 'function') ? options.easing : animations[options.easing]\n\t\n\t  // if nothing is specified, default to ease (similar to CSS animations)\n\t  if (!easing) {\n\t    if (options.easing) {\n\t      console.warn('Unknown easing function in amator: ' + options.easing);\n\t    }\n\t    easing = animations.ease\n\t  }\n\t\n\t  var step = typeof options.step === 'function' ? options.step : noop\n\t  var done = typeof options.done === 'function' ? options.done : noop\n\t\n\t  var scheduler = getScheduler(options.scheduler)\n\t\n\t  var keys = Object.keys(target)\n\t  keys.forEach(function(key) {\n\t    start[key] = source[key]\n\t    diff[key] = target[key] - source[key]\n\t  })\n\t\n\t  var durationInMs = options.duration || 400\n\t  var durationInFrames = Math.max(1, durationInMs * 0.06) // 0.06 because 60 frames pers 1,000 ms\n\t  var previousAnimationId\n\t  var frame = 0\n\t\n\t  previousAnimationId = scheduler.next(loop)\n\t\n\t  return {\n\t    cancel: cancel\n\t  }\n\t\n\t  function cancel() {\n\t    scheduler.cancel(previousAnimationId)\n\t    previousAnimationId = 0\n\t  }\n\t\n\t  function loop() {\n\t    var t = easing(frame/durationInFrames)\n\t    frame += 1\n\t    setValues(t)\n\t    if (frame <= durationInFrames) {\n\t      previousAnimationId = scheduler.next(loop)\n\t      step(source)\n\t    } else {\n\t      previousAnimationId = 0\n\t      setTimeout(function() { done(source) }, 0)\n\t    }\n\t  }\n\t\n\t  function setValues(t) {\n\t    keys.forEach(function(key) {\n\t      source[key] = diff[key] * t + start[key]\n\t    })\n\t  }\n\t}\n\t\n\tfunction noop() { }\n\t\n\tfunction getScheduler(scheduler) {\n\t  if (!scheduler) {\n\t    var canRaf = typeof window !== 'undefined' && window.requestAnimationFrame\n\t    return canRaf ? rafScheduler() : timeoutScheduler()\n\t  }\n\t  if (typeof scheduler.next !== 'function') throw new Error('Scheduler is supposed to have next(cb) function')\n\t  if (typeof scheduler.cancel !== 'function') throw new Error('Scheduler is supposed to have cancel(handle) function')\n\t\n\t  return scheduler\n\t}\n\t\n\tfunction rafScheduler() {\n\t  return {\n\t    next: window.requestAnimationFrame.bind(window),\n\t    cancel: window.cancelAnimationFrame.bind(window)\n\t  }\n\t}\n\t\n\tfunction timeoutScheduler() {\n\t  return {\n\t    next: function(cb) {\n\t      return setTimeout(cb, 1000/60)\n\t    },\n\t    cancel: function (id) {\n\t      return clearTimeout(id)\n\t    }\n\t  }\n\t}\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar angleStep = Math.PI / 180 * 0.5;\n\t\n\tfunction Curve(from, to, func) {\n\t  this.alpha = 0;\n\t  this.from = from;\n\t  this.to = to;\n\t\n\t  this.step = function () {\n\t    this.x0 = func.x0(this);\n\t    this.y0 = func.y0(this);\n\t\n\t    this.x1 = func.x1(this);\n\t    this.y1 = func.y1(this);\n\t    this.x2 = func.x2(this);\n\t    this.y2 = func.y2(this);\n\t\n\t    this.x3 = func.x3(this);\n\t    this.y3 = func.y3(this);\n\t\n\t    this.alpha += angleStep;\n\t  };\n\t\n\t  this.step();\n\t}\n\t\n\tmodule.exports = Curve;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keys = __webpack_require__(30);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _create = __webpack_require__(6);\n\t\n\tvar _create2 = _interopRequireDefault(_create);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar empty = {\n\t  path: '',\n\t  search: {}\n\t};\n\tvar queryHelper = {\n\t  parse: parse,\n\t  search: search\n\t};\n\t\n\texports.default = queryHelper;\n\t\n\t\n\tfunction parse(qs) {\n\t  if (!qs) return empty;\n\t\n\t  var parts = qs.match(/^#\\/([^?]*)\\?(.*)$/);\n\t  if (!parts) return empty;\n\t\n\t  var search = (0, _create2.default)(null);\n\t  if (parts[2]) {\n\t    parts[2].split('&').forEach(function (keyValuePair) {\n\t      var part = keyValuePair.split('=');\n\t      var key = window.decodeURIComponent(part[0]);\n\t      var value = window.decodeURIComponent(part[1]);\n\t      search[key] = value;\n\t    });\n\t  }\n\t\n\t  var path = parts[1];\n\t  return {\n\t    path: path, search: search\n\t  };\n\t}\n\t\n\tfunction search(obj) {\n\t  return (0, _keys2.default)(obj).map(function (key) {\n\t    return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n\t  }).join('&');\n\t}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _create = __webpack_require__(6);\n\t\n\tvar _create2 = _interopRequireDefault(_create);\n\t\n\tvar _assign = __webpack_require__(29);\n\t\n\tvar _assign2 = _interopRequireDefault(_assign);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar svg = __webpack_require__(21);\n\tvar panzoom = __webpack_require__(61);\n\tvar Curve = __webpack_require__(24);\n\t\n\tvar count = 10;\n\tvar step = Math.PI * 2 / count;\n\t\n\tmodule.exports = createRenderer;\n\t\n\tfunction createRenderer(scene, functions) {\n\t  var zoomer = panzoom(scene);\n\t  var path = svg('path', {\n\t    stroke: '#000',\n\t    'stroke-opacity': 0.7,\n\t    fill: 'transparent'\n\t  });\n\t  var curves = [];\n\t  var compiledFunctions = compileFunctions(functions);\n\t\n\t  scene.appendChild(path);\n\t\n\t  initCurves();\n\t  var lastRaf = window.requestAnimationFrame(frame);\n\t\n\t  return {\n\t    dispose: dispose,\n\t    getPanzoom: getPanzoom,\n\t    recompile: recompile\n\t  };\n\t\n\t  function recompile() {\n\t    try {\n\t      var newCompiledFunction = compileFunctions(functions);\n\t      (0, _assign2.default)(compiledFunctions, newCompiledFunction);\n\t    } catch (e) {\n\t      return e;\n\t    }\n\t  }\n\t\n\t  function frame() {\n\t    lastRaf = window.requestAnimationFrame(frame);\n\t    var data = curves.map(toDataCurve).join(' ');\n\t    path.setAttributeNS(null, 'd', data);\n\t\n\t    curves.forEach(moveCurve);\n\t  }\n\t\n\t  function moveCurve(curve) {\n\t    curve.step();\n\t\n\t    curve.fromUI.attr({\n\t      cx: curve.x1,\n\t      cy: curve.y1\n\t    });\n\t\n\t    curve.toUI.attr({\n\t      cx: curve.x2,\n\t      cy: curve.y2\n\t    });\n\t  }\n\t\n\t  function getPanzoom() {\n\t    return zoomer;\n\t  }\n\t\n\t  function dispose() {\n\t    zoomer.dispose();\n\t    window.cancelAnimationFrame(lastRaf);\n\t  }\n\t\n\t  function initCurves() {\n\t    for (var i = 0; i < count; ++i) {\n\t      var from = i * step;\n\t      var to = (i + 1) * step;\n\t\n\t      var model = new Curve(from, to, compiledFunctions);\n\t\n\t      model.fromUI = makeUI(model.x1, model.y1, '#E91E63');\n\t      model.toUI = makeUI(model.x2, model.y2, '#2196F3');\n\t\n\t      curves.push(model);\n\t    }\n\t  }\n\t\n\t  function makeUI(x, y, color) {\n\t    var ui = svg('circle', {\n\t      r: 2,\n\t      fill: color,\n\t      cx: x,\n\t      cy: y\n\t    });\n\t\n\t    scene.appendChild(ui);\n\t    return ui;\n\t  }\n\t}\n\t\n\tfunction compileFunctions(all, result) {\n\t  result = result || (0, _create2.default)(null);\n\t\n\t  all.forEach(compileOne);\n\t\n\t  return result;\n\t\n\t  function compileOne(definition) {\n\t    var code = definition.code;\n\t    var safeCheck = safe(code);\n\t\n\t    if (!safeCheck) throw new Error('Unsafe code: ' + safeCheck);\n\t\n\t    var compiledFunction = new Function('from', 'to', 'alpha', 'window', 'document', 'return ' + code);\n\t\n\t    result[definition.name] = function (curve) {\n\t      return compiledFunction.call(undefined, curve.from, curve.to, curve.alpha);\n\t    };\n\t  }\n\t}\n\t\n\tfunction safe(code) {\n\t  return true;\n\t}\n\t\n\tfunction toDataCurve(curve) {\n\t  return 'M' + curve.x0 + ' ' + curve.y0 + ' C' + curve.x1 + ' ' + curve.y1 + ', ' + curve.x2 + ' ' + curve.y2 + ', ' + curve.x3 + ' ' + curve.y3;\n\t}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Scene = __webpack_require__(73);\n\t\n\tvar _Scene2 = _interopRequireDefault(_Scene);\n\t\n\tvar _appState = __webpack_require__(11);\n\t\n\tvar _appState2 = _interopRequireDefault(_appState);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    Scene: _Scene2.default\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      animation: _appState2.default.animation\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _renderer = __webpack_require__(26);\n\t\n\tvar _renderer2 = _interopRequireDefault(_renderer);\n\t\n\tvar _appState = __webpack_require__(11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: ['animation'],\n\t\n\t  methods: {\n\t    updateAnimation: function updateAnimation(item) {\n\t      var error = this.renderer.recompile();\n\t      if (!error) (0, _appState.setHashFromState)();\n\t    }\n\t  },\n\t\n\t  ready: function ready() {\n\t    var scene = this.$els.scene;\n\t    this.renderer = (0, _renderer2.default)(scene, this.animation);\n\t\n\t    var container = this.$els.container;\n\t    var zoomer = this.renderer.getPanzoom();\n\t    zoomer.moveBy(container.clientWidth / 2, container.clientHeight / 2);\n\t  },\n\t  destroyed: function destroyed() {\n\t    this.renderer.dispose();\n\t  }\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(32), __esModule: true };\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(34), __esModule: true };\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t/**\n\t * https://github.com/gre/bezier-easing\n\t * BezierEasing - use bezier curve for transition easing function\n\t * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n\t */\n\t\n\t// These values are established by empiricism with tests (tradeoff: performance VS precision)\n\tvar NEWTON_ITERATIONS = 4;\n\tvar NEWTON_MIN_SLOPE = 0.001;\n\tvar SUBDIVISION_PRECISION = 0.0000001;\n\tvar SUBDIVISION_MAX_ITERATIONS = 10;\n\t\n\tvar kSplineTableSize = 11;\n\tvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\t\n\tvar float32ArraySupported = typeof Float32Array === 'function';\n\t\n\tfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n\tfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n\tfunction C (aA1)      { return 3.0 * aA1; }\n\t\n\t// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\tfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\t\n\t// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\tfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\t\n\tfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n\t  var currentX, currentT, i = 0;\n\t  do {\n\t    currentT = aA + (aB - aA) / 2.0;\n\t    currentX = calcBezier(currentT, mX1, mX2) - aX;\n\t    if (currentX > 0.0) {\n\t      aB = currentT;\n\t    } else {\n\t      aA = currentT;\n\t    }\n\t  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\t  return currentT;\n\t}\n\t\n\tfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n\t for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n\t   var currentSlope = getSlope(aGuessT, mX1, mX2);\n\t   if (currentSlope === 0.0) {\n\t     return aGuessT;\n\t   }\n\t   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n\t   aGuessT -= currentX / currentSlope;\n\t }\n\t return aGuessT;\n\t}\n\t\n\tmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n\t  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n\t    throw new Error('bezier x values must be in [0, 1] range');\n\t  }\n\t\n\t  // Precompute samples table\n\t  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\t  if (mX1 !== mY1 || mX2 !== mY2) {\n\t    for (var i = 0; i < kSplineTableSize; ++i) {\n\t      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n\t    }\n\t  }\n\t\n\t  function getTForX (aX) {\n\t    var intervalStart = 0.0;\n\t    var currentSample = 1;\n\t    var lastSample = kSplineTableSize - 1;\n\t\n\t    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n\t      intervalStart += kSampleStepSize;\n\t    }\n\t    --currentSample;\n\t\n\t    // Interpolate to provide an initial guess for t\n\t    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n\t    var guessForT = intervalStart + dist * kSampleStepSize;\n\t\n\t    var initialSlope = getSlope(guessForT, mX1, mX2);\n\t    if (initialSlope >= NEWTON_MIN_SLOPE) {\n\t      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n\t    } else if (initialSlope === 0.0) {\n\t      return guessForT;\n\t    } else {\n\t      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n\t    }\n\t  }\n\t\n\t  return function BezierEasing (x) {\n\t    if (mX1 === mY1 && mX2 === mY2) {\n\t      return x; // linear\n\t    }\n\t    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\t    if (x === 0) {\n\t      return 0;\n\t    }\n\t    if (x === 1) {\n\t      return 1;\n\t    }\n\t    return calcBezier(getTForX(x), mY1, mY2);\n\t  };\n\t};\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(56);\n\tmodule.exports = __webpack_require__(1).Object.assign;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(57);\n\tvar $Object = __webpack_require__(1).Object;\n\tmodule.exports = function create(P, D){\n\t  return $Object.create(P, D);\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(58);\n\tmodule.exports = __webpack_require__(1).Object.keys;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(19)\n\t  , toLength  = __webpack_require__(53)\n\t  , toIndex   = __webpack_require__(52);\n\tmodule.exports = function(IS_INCLUDES){\n\t  return function($this, el, fromIndex){\n\t    var O      = toIObject($this)\n\t      , length = toLength(O.length)\n\t      , index  = toIndex(fromIndex, length)\n\t      , value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    if(IS_INCLUDES && el != el)while(length > index){\n\t      value = O[index++];\n\t      if(value != value)return true;\n\t    // Array#toIndex ignores holes, Array#includes - not\n\t    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n\t      if(O[index] === el)return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(35);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(16)\n\t  , createDesc = __webpack_require__(50);\n\tmodule.exports = __webpack_require__(2) ? function(object, key, value){\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(4).document && document.documentElement;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(2) && !__webpack_require__(3)(function(){\r\n\t  return Object.defineProperty(__webpack_require__(13)('div'), 'a', {get: function(){ return 7; }}).a != 7;\r\n\t});\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar getKeys  = __webpack_require__(10)\n\t  , gOPS     = __webpack_require__(46)\n\t  , pIE      = __webpack_require__(48)\n\t  , toObject = __webpack_require__(20)\n\t  , IObject  = __webpack_require__(15)\n\t  , $assign  = Object.assign;\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = !$assign || __webpack_require__(3)(function(){\n\t  var A = {}\n\t    , B = {}\n\t    , S = Symbol()\n\t    , K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function(k){ B[k] = k; });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n\t  var T     = toObject(target)\n\t    , aLen  = arguments.length\n\t    , index = 1\n\t    , getSymbols = gOPS.f\n\t    , isEnum     = pIE.f;\n\t  while(aLen > index){\n\t    var S      = IObject(arguments[index++])\n\t      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n\t      , length = keys.length\n\t      , j      = 0\n\t      , key;\n\t    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n\t  } return T;\n\t} : $assign;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\n\tvar anObject    = __webpack_require__(7)\r\n\t  , dPs         = __webpack_require__(45)\r\n\t  , enumBugKeys = __webpack_require__(14)\r\n\t  , IE_PROTO    = __webpack_require__(17)('IE_PROTO')\r\n\t  , Empty       = function(){ /* empty */ }\r\n\t  , PROTOTYPE   = 'prototype';\r\n\t\r\n\t// Create object with fake `null` prototype: use iframe Object with cleared prototype\r\n\tvar createDict = function(){\r\n\t  // Thrash, waste and sodomy: IE GC bug\r\n\t  var iframe = __webpack_require__(13)('iframe')\r\n\t    , i      = enumBugKeys.length\r\n\t    , gt     = '>'\r\n\t    , iframeDocument;\r\n\t  iframe.style.display = 'none';\r\n\t  __webpack_require__(41).appendChild(iframe);\r\n\t  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\r\n\t  // createDict = iframe.contentWindow.Object;\r\n\t  // html.removeChild(iframe);\r\n\t  iframeDocument = iframe.contentWindow.document;\r\n\t  iframeDocument.open();\r\n\t  iframeDocument.write('<script>document.F=Object</script' + gt);\r\n\t  iframeDocument.close();\r\n\t  createDict = iframeDocument.F;\r\n\t  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\r\n\t  return createDict();\r\n\t};\r\n\t\r\n\tmodule.exports = Object.create || function create(O, Properties){\r\n\t  var result;\r\n\t  if(O !== null){\r\n\t    Empty[PROTOTYPE] = anObject(O);\r\n\t    result = new Empty;\r\n\t    Empty[PROTOTYPE] = null;\r\n\t    // add \"__proto__\" for Object.getPrototypeOf polyfill\r\n\t    result[IE_PROTO] = O;\r\n\t  } else result = createDict();\r\n\t  return Properties === undefined ? result : dPs(result, Properties);\r\n\t};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP       = __webpack_require__(16)\r\n\t  , anObject = __webpack_require__(7)\r\n\t  , getKeys  = __webpack_require__(10);\r\n\t\r\n\tmodule.exports = __webpack_require__(2) ? Object.defineProperties : function defineProperties(O, Properties){\r\n\t  anObject(O);\r\n\t  var keys   = getKeys(Properties)\r\n\t    , length = keys.length\r\n\t    , i = 0\r\n\t    , P;\r\n\t  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\r\n\t  return O;\r\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\texports.f = Object.getOwnPropertySymbols;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar has          = __webpack_require__(39)\r\n\t  , toIObject    = __webpack_require__(19)\r\n\t  , arrayIndexOf = __webpack_require__(36)(false)\r\n\t  , IE_PROTO     = __webpack_require__(17)('IE_PROTO');\r\n\t\r\n\tmodule.exports = function(object, names){\r\n\t  var O      = toIObject(object)\r\n\t    , i      = 0\r\n\t    , result = []\r\n\t    , key;\r\n\t  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\r\n\t  // Don't enum bug & hidden keys\r\n\t  while(names.length > i)if(has(O, key = names[i++])){\r\n\t    ~arrayIndexOf(result, key) || result.push(key);\r\n\t  }\r\n\t  return result;\r\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\texports.f = {}.propertyIsEnumerable;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// most Object methods by ES6 should accept primitives\n\tvar $export = __webpack_require__(8)\n\t  , core    = __webpack_require__(1)\n\t  , fails   = __webpack_require__(3);\n\tmodule.exports = function(KEY, exec){\n\t  var fn  = (core.Object || {})[KEY] || Object[KEY]\n\t    , exp = {};\n\t  exp[KEY] = exec(fn);\n\t  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n\t};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(4)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(18)\n\t  , max       = Math.max\n\t  , min       = Math.min;\n\tmodule.exports = function(index, length){\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(18)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(9);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function(it, S){\n\t  if(!isObject(it))return it;\n\t  var fn, val;\n\t  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S + $export.F, 'Object', {assign: __webpack_require__(43)});\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8)\r\n\t// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\n\t$export($export.S, 'Object', {create: __webpack_require__(44)});\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 Object.keys(O)\n\tvar toObject = __webpack_require__(20)\n\t  , $keys    = __webpack_require__(10);\n\t\n\t__webpack_require__(49)('keys', function(){\n\t  return function keys(it){\n\t    return $keys(toObject(it));\n\t  };\n\t});\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* globals SVGElement */\n\t/**\n\t * Allows to drag and zoom svg elements\n\t */\n\tvar wheel = __webpack_require__(75)\n\tvar animate = __webpack_require__(23);\n\tvar zoomTo = __webpack_require__(66)\n\tvar kinetic = __webpack_require__(63)\n\tvar moveBy = __webpack_require__(64)\n\tvar moveTo = __webpack_require__(65)\n\tvar createEvent = __webpack_require__(62)\n\t\n\tvar speed = 0.065\n\t\n\tmodule.exports = createPanZoom;\n\t\n\tfunction createPanZoom(svgElement, options) {\n\t  var elementValid = (svgElement instanceof SVGElement)\n\t\n\t  if (!elementValid) {\n\t    throw new Error('svg element is required for svg.panzoom to work')\n\t  }\n\t\n\t  var owner = svgElement.ownerSVGElement\n\t  if (!owner) {\n\t    throw new Error(\n\t      'Do not apply panzoom to the root <svg> element. ' +\n\t      'Use its child instead (e.g. <g></g>). ' +\n\t      'As of March 2016 only FireFox supported transform on the root element')\n\t  }\n\t\n\t  options = options || {}\n\t\n\t  var beforeWheel = options.beforeWheel || noop\n\t\n\t  var touchInProgress = false\n\t\n\t  // We only need to fire panstart when actual move happens\n\t  var panstartFired = false\n\t\n\t  // cache mouse coordinates here\n\t  var mouseX\n\t  var mouseY\n\t\n\t  var pinchZoomLength\n\t\n\t  var dragObject\n\t  var prevSelectStart\n\t  var prevDragStart\n\t\n\t  var smoothScroll = kinetic(svgElement, scroll)\n\t  var previousAnimation\n\t\n\t  listenForEvents()\n\t\n\t  return {\n\t    dispose: dispose,\n\t    moveBy: internalMoveBy,\n\t    centerOn: centerOn\n\t  }\n\t\n\t  function centerOn(ui) {\n\t    var parent = ui.ownerSVGElement\n\t    if (!parent) throw new Error('ui element is required to be within the scene')\n\t\n\t    var clientRect = ui.getBoundingClientRect()\n\t    var cx = clientRect.left + clientRect.width/2\n\t    var cy = clientRect.top + clientRect.height/2\n\t\n\t    var container = parent.getBoundingClientRect()\n\t    var dx = container.width/2 - cx\n\t    var dy = container.height/2 - cy\n\t\n\t    internalMoveBy(dx, dy, true)\n\t  }\n\t\n\t  function internalMoveBy(dx, dy, smooth) {\n\t    if (!smooth) {\n\t      moveBy(svgElement, dx, dy)\n\t      return\n\t    }\n\t\n\t    if (previousAnimation) previousAnimation.cancel()\n\t\n\t    var from = { x: 0, y: 0 }\n\t    var to = { x: dx, y : dy }\n\t    var lastX = 0\n\t    var lastY = 0\n\t\n\t    previousAnimation = animate(from, to, {\n\t      step: function(v) {\n\t        moveBy(svgElement, v.x - lastX, v.y - lastY)\n\t\n\t        lastX = v.x\n\t        lastY = v.y\n\t      }\n\t    })\n\t  }\n\t\n\t  function scroll(x, y) {\n\t    moveTo(svgElement, x, y)\n\t  }\n\t\n\t  function dispose() {\n\t    wheel.removeWheelListener(svgElement, onMouseWheel)\n\t    owner.removeEventListener('mousedown', onMouseDown)\n\t\n\t    smoothScroll.cancel()\n\t\n\t    releaseDocumentMouse()\n\t    releaseTouches()\n\t\n\t    triggerPanEnd()\n\t  }\n\t\n\t  function listenForEvents() {\n\t    owner.addEventListener('mousedown', onMouseDown)\n\t    owner.addEventListener('touchstart', onTouch)\n\t    wheel.addWheelListener(owner, onMouseWheel)\n\t  }\n\t\n\t  function onTouch(e) {\n\t    if (e.touches.length === 1) {\n\t      return handleSignleFingerTouch(e, e.touches[0])\n\t    } else if (e.touches.length === 2) {\n\t      // handleTouchMove() will care about pinch zoom.\n\t      e.stopPropagation()\n\t      e.preventDefault()\n\t\n\t      pinchZoomLength = getPinchZoomLength(e.touches[1], e.touches[1])\n\t    }\n\t  }\n\t\n\t  function handleSignleFingerTouch(e) {\n\t    e.stopPropagation()\n\t    e.preventDefault()\n\t\n\t    var touch = e.touches[0]\n\t    mouseX = touch.clientX\n\t    mouseY = touch.clientY\n\t\n\t    if (!touchInProgress) {\n\t      touchInProgress = true\n\t      document.addEventListener('touchmove', handleTouchMove)\n\t      document.addEventListener('touchend', handleTouchEnd)\n\t      document.addEventListener('touchcancel', handleTouchEnd)\n\t    }\n\t  }\n\t\n\t  function handleTouchMove(e) {\n\t    triggerPanStart()\n\t\n\t    if (e.touches.length === 1) {\n\t      e.stopPropagation()\n\t      var touch = e.touches[0]\n\t\n\t      var dx = touch.clientX - mouseX\n\t      var dy = touch.clientY - mouseY\n\t\n\t      mouseX = touch.clientX\n\t      mouseY = touch.clientY\n\t      internalMoveBy(dx, dy)\n\t    } else if (e.touches.length === 2) {\n\t      // it's a zoom, let's find direction\n\t      var t1 = e.touches[0]\n\t      var t2 = e.touches[1]\n\t      var currentPinchLength = getPinchZoomLength(t1, t2)\n\t\n\t      var delta = 0\n\t      if (currentPinchLength < pinchZoomLength) {\n\t        delta = 1\n\t      } else if (currentPinchLength > pinchZoomLength) {\n\t        delta = -1\n\t      }\n\t\n\t      var scaleMultiplier = getScaleMultiplier(delta)\n\t\n\t      mouseX = (t1.clientX + t2.clientX)/2\n\t      mouseY = (t1.clientY + t2.clientY)/2\n\t\n\t      zoomTo(svgElement, mouseX, mouseY, scaleMultiplier)\n\t\n\t      pinchZoomLength = currentPinchLength\n\t      e.stopPropagation()\n\t      e.preventDefault()\n\t    }\n\t  }\n\t\n\t  function handleTouchEnd(e) {\n\t    if (e.touches.length > 0) {\n\t      mouseX = e.touches[0].clientX\n\t      mouseY = e.touches[0].clientY\n\t    } else {\n\t      touchInProgress = false\n\t      triggerPanEnd()\n\t      releaseTouches()\n\t    }\n\t  }\n\t\n\t  function getPinchZoomLength(finger1, finger2) {\n\t    return (finger1.clientX - finger2.clientX) * (finger1.clientX - finger2.clientX) +\n\t      (finger1.clientY - finger2.clientY) * (finger1.clientY - finger2.clientY)\n\t  }\n\t\n\t  function onMouseDown(e) {\n\t    if (touchInProgress) {\n\t      // modern browsers will fire mousedown for touch events too\n\t      // we do not want this, since touch is handled separately.\n\t      e.stopPropagation()\n\t      return false;\n\t    }\n\t    // for IE, left click == 1\n\t    // for Firefox, left click == 0\n\t    var isLeftButton = ((e.button === 1 && window.event !== null) || e.button === 0)\n\t    if (!isLeftButton) return\n\t\n\t    mouseX = e.clientX\n\t    mouseY = e.clientY\n\t\n\t    // We need to listen on document itself, since mouse can go outside of the\n\t    // window, and we will loose it\n\t    document.addEventListener('mousemove', onMouseMove)\n\t    document.addEventListener('mouseup', onMouseUp)\n\t\n\t    // prevent text selection\n\t    dragObject = e.target || e.srcElement\n\t    prevSelectStart = window.document.onselectstart\n\t    prevDragStart = window.document.ondragstart\n\t\n\t    window.document.onselectstart = disabled\n\t    dragObject.ondragstart = disabled\n\t\n\t    return false\n\t  }\n\t\n\t  function onMouseMove(e) {\n\t    // no need to worry about mouse events when touch is happening\n\t    if (touchInProgress) return\n\t\n\t    triggerPanStart()\n\t\n\t    var dx = e.clientX - mouseX\n\t    var dy = e.clientY - mouseY\n\t\n\t    mouseX = e.clientX\n\t    mouseY = e.clientY\n\t    internalMoveBy(dx, dy)\n\t  }\n\t\n\t  function onMouseUp() {\n\t    window.document.onselectstart = prevSelectStart\n\t    if (dragObject) dragObject.ondragstart = prevDragStart\n\t\n\t    triggerPanEnd()\n\t    releaseDocumentMouse()\n\t  }\n\t\n\t  function releaseDocumentMouse() {\n\t    document.removeEventListener('mousemove', onMouseMove)\n\t    document.removeEventListener('mouseup', onMouseUp)\n\t    panstartFired = false\n\t  }\n\t\n\t  function releaseTouches() {\n\t    document.removeEventListener('touchmove', handleTouchMove);\n\t    document.removeEventListener('touchend', handleTouchEnd);\n\t    document.removeEventListener('touchcancel', handleTouchEnd);\n\t    panstartFired = false\n\t  }\n\t\n\t  function onMouseWheel(e) {\n\t    // if client does not want to handle this event - just ignore the call\n\t    if (beforeWheel(e)) return\n\t\n\t    smoothScroll.cancel()\n\t\n\t    var scaleMultiplier = getScaleMultiplier(e.deltaY)\n\t\n\t    if (scaleMultiplier !== 1) {\n\t      zoomTo(svgElement, e.clientX, e.clientY, scaleMultiplier)\n\t      e.preventDefault()\n\t    }\n\t  }\n\t\n\t  function getScaleMultiplier(delta) {\n\t    var scaleMultiplier = 1\n\t    if (delta > 0) { // zoom out\n\t      scaleMultiplier = (1 - speed)\n\t    } else if (delta < 0) { // zoom in\n\t      scaleMultiplier = (1 + speed)\n\t    }\n\t\n\t    return scaleMultiplier\n\t  }\n\t\n\t  function triggerPanStart() {\n\t    if (!panstartFired) {\n\t      triggerEvent('panstart')\n\t      panstartFired = true\n\t      smoothScroll.start()\n\t    }\n\t  }\n\t\n\t  function triggerPanEnd() {\n\t    if (panstartFired) {\n\t      smoothScroll.stop()\n\t      triggerEvent('panend')\n\t    }\n\t  }\n\t\n\t  function triggerEvent(name) {\n\t    var event = createEvent(name)\n\t    svgElement.dispatchEvent(event)\n\t  }\n\t}\n\t\n\tfunction disabled(e) {\n\t  e.stopPropagation()\n\t  return false\n\t}\n\t\n\tfunction noop() { }\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t/* global Event */\n\tmodule.exports = createEvent;\n\t\n\tvar isIE = typeof Event !== 'function'\n\t\n\t/**\n\t * Constructs custom event. Works in IE too\n\t */\n\tfunction createEvent(name) {\n\t  if (isIE) {\n\t    var evt = document.createEvent('CustomEvent')\n\t    evt.initCustomEvent(name, true, true, undefined)\n\t    return evt\n\t  } else {\n\t    return new Event(name)\n\t  }\n\t}\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Allows smooth kinetic scrolling of the surface\n\t */\n\tvar getTransform = __webpack_require__(5);\n\t\n\tmodule.exports = kinetic;\n\t\n\tvar minVelocity = 10\n\tvar amplitude = 0.42\n\t\n\tfunction kinetic(element, scroll) {\n\t  var lastRect\n\t  var timestamp\n\t  var timeConstant = 342\n\t\n\t  var ticker\n\t  var vx, targetX, ax;\n\t  var vy, targetY, ay;\n\t\n\t  var raf\n\t\n\t  return {\n\t    start: start,\n\t    stop: stop,\n\t    cancel: dispose\n\t  }\n\t\n\t  function dispose() {\n\t    window.clearInterval(ticker)\n\t    window.cancelAnimationFrame(raf)\n\t  }\n\t\n\t  function start() {\n\t    lastRect = getRect()\n\t\n\t    ax = ay = vx = vy = 0\n\t    timestamp = new Date()\n\t\n\t    window.clearInterval(ticker)\n\t    window.cancelAnimationFrame(raf)\n\t\n\t    ticker = window.setInterval(track, 100);\n\t  }\n\t\n\t  function track() {\n\t    var now = Date.now();\n\t    var elapsed = now - timestamp;\n\t    timestamp = now;\n\t\n\t    var rect = getRect()\n\t\n\t    var dx = rect.x - lastRect.x\n\t    var dy = rect.y - lastRect.y\n\t\n\t    lastRect = rect\n\t\n\t    var dt = 1000 / (1 + elapsed)\n\t\n\t    // moving average\n\t    vx = 0.8 * dx * dt + 0.2 * vx\n\t    vy = 0.8 * dy * dt + 0.2 * vy\n\t  }\n\t\n\t  function stop() {\n\t    window.clearInterval(ticker);\n\t    window.cancelAnimationFrame(raf)\n\t\n\t    var rect = getRect()\n\t\n\t    targetX = rect.x\n\t    targetY = rect.y\n\t    timestamp = Date.now()\n\t\n\t    if (vx < -minVelocity || vx > minVelocity) {\n\t      ax = amplitude * vx\n\t      targetX += ax\n\t    }\n\t\n\t    if (vy < -minVelocity || vy > minVelocity) {\n\t      ay = amplitude * vy\n\t      targetY += ay\n\t    }\n\t\n\t    raf = window.requestAnimationFrame(autoScroll);\n\t  }\n\t\n\t  function autoScroll() {\n\t    var elapsed = Date.now() - timestamp\n\t\n\t    var moving = false\n\t    var dx = 0\n\t    var dy = 0\n\t\n\t    if (ax) {\n\t      dx = -ax * Math.exp(-elapsed / timeConstant)\n\t\n\t      if (dx > 0.5 || dx < -0.5) moving = true\n\t      else dx = ax = 0\n\t    }\n\t\n\t    if (ay) {\n\t      dy = -ay * Math.exp(-elapsed / timeConstant)\n\t\n\t      if (dy > 0.5 || dy < -0.5) moving = true\n\t      else dy = ay = 0\n\t    }\n\t\n\t    if (moving) {\n\t      scroll(targetX + dx, targetY + dy)\n\t      raf = window.requestAnimationFrame(autoScroll);\n\t    }\n\t  }\n\t\n\t  function getRect() {\n\t    var matrix = getTransform(element).matrix\n\t    return {\n\t      x: matrix.e,\n\t      y: matrix.f\n\t    }\n\t  }\n\t}\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Moves element by dx,dy offset without affecting its scale\n\t */\n\tvar getTransform = __webpack_require__(5)\n\t\n\tmodule.exports = moveBy\n\t\n\tfunction moveBy(svgElement, dx, dy) {\n\t  var transform = getTransform(svgElement)\n\t\n\t  svgElement.setAttribute(\n\t    'transform', 'matrix(' +\n\t      [\n\t        transform.matrix.a,\n\t        transform.matrix.b,\n\t        transform.matrix.c,\n\t        transform.matrix.d,\n\t        transform.matrix.e + dx,\n\t        transform.matrix.f + dy\n\t      ].join(' ') + ')'\n\t  )\n\t}\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Move element to given x,y coordinates without affecting its scale\n\t */\n\tvar getTransform = __webpack_require__(5)\n\t\n\tmodule.exports = moveTo\n\t\n\tfunction moveTo(svgElement, x, y) {\n\t  var transform = getTransform(svgElement)\n\t\n\t  svgElement.setAttribute(\n\t    'transform', 'matrix(' +\n\t      [\n\t        transform.matrix.a,\n\t        transform.matrix.b,\n\t        transform.matrix.c,\n\t        transform.matrix.d,\n\t        x,\n\t        y\n\t      ].join(' ') + ')'\n\t  )\n\t}\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getTransform = __webpack_require__(5)\n\t\n\tmodule.exports = zoomTo\n\t\n\t/**\n\t * Sets the new scale for an element, as if it was zoomed into `clientX, clientY`\n\t * point\n\t */\n\tfunction zoomTo(svgElement, clientX, clientY, scaleMultiplier) {\n\t  var transform = getTransform(svgElement)\n\t  var parent = svgElement.ownerSVGElement\n\t  var parentCTM = parent.getScreenCTM()\n\t  // we have consistent scale on both X and Y, thus we can use just one attribute:\n\t  var scale = transform.matrix.a * scaleMultiplier\n\t\n\t  var x = clientX * parentCTM.a - parentCTM.e\n\t  var y = clientY * parentCTM.a - parentCTM.f\n\t\n\t  svgElement.setAttribute(\n\t    'transform', 'matrix(' +\n\t      [\n\t        scale,\n\t        transform.matrix.b,\n\t        transform.matrix.c,\n\t        scale,\n\t        x - scaleMultiplier * (x - transform.matrix.e),\n\t        y - scaleMultiplier * (y - transform.matrix.f)\n\t      ].join(' ') + ')'\n\t  )\n\t}\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar parser = __webpack_require__(69);\n\tvar svg = __webpack_require__(21);\n\t\n\tmodule.exports = compile;\n\t\n\tfunction compile(svgText) {\n\t  try {\n\t    svgText = addNamespaces(svgText);\n\t    return svg(parser.parseFromString(svgText, \"text/xml\").documentElement);\n\t  } catch (e) {\n\t    throw e;\n\t  }\n\t}\n\t\n\tfunction addNamespaces(text) {\n\t  if (!text) return;\n\t\n\t  var namespaces = 'xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\"';\n\t  var match = text.match(/^<\\w+/);\n\t  if (match) {\n\t    var tagLength = match[0].length;\n\t    return text.substr(0, tagLength) + ' ' + namespaces + ' ' + text.substr(tagLength);\n\t  } else {\n\t    throw new Error('Cannot parse input text: invalid xml?');\n\t  }\n\t}\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports) {\n\n\tmodule.exports = template;\n\t\n\tvar BINDING_EXPR = /{{(.+?)}}/;\n\t\n\tfunction template(domNode) {\n\t  var allBindings = Object.create(null);\n\t  extractAllBindings(domNode, allBindings);\n\t\n\t  return {\n\t    link: function(model) {\n\t      Object.keys(allBindings).forEach(function(key) {\n\t        var setter = allBindings[key];\n\t        setter.forEach(changeModel);\n\t      });\n\t\n\t      function changeModel(setter) {\n\t        setter(model);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tfunction extractAllBindings(domNode, allBindings) {\n\t  var nodeType = domNode.nodeType;\n\t  var typeSupported = (nodeType === 1) || (nodeType === 3);\n\t  if (!typeSupported) return;\n\t  var i;\n\t  if (domNode.hasChildNodes()) {\n\t    var domChildren = domNode.childNodes;\n\t    for (i = 0; i < domChildren.length; ++i) {\n\t      extractAllBindings(domChildren[i], allBindings);\n\t    }\n\t  }\n\t\n\t  if (nodeType === 3) { // text:\n\t    bindTextContent(domNode, allBindings);\n\t  }\n\t\n\t  if (!domNode.attributes) return; // this might be a text. Need to figure out what to do in that case\n\t\n\t  var attrs = domNode.attributes;\n\t  for (i = 0; i < attrs.length; ++i) {\n\t    bindDomAttribute(attrs[i], domNode, allBindings);\n\t  }\n\t}\n\t\n\tfunction bindDomAttribute(domAttribute, element, allBindings) {\n\t  var value = domAttribute.value;\n\t  if (!value) return; // unary attribute?\n\t\n\t  var modelNameMatch = value.match(BINDING_EXPR);\n\t  if (!modelNameMatch) return; // does not look like a binding\n\t\n\t  var attrName = domAttribute.localName;\n\t  var modelPropertyName = modelNameMatch[1];\n\t  var isSimpleValue = modelPropertyName.indexOf('.') < 0;\n\t\n\t  if (!isSimpleValue) throw new Error('simplesvg currently does not support nested bindings');\n\t\n\t  var propertyBindings = allBindings[modelPropertyName];\n\t  if (!propertyBindings) {\n\t    propertyBindings = allBindings[modelPropertyName] = [attributeSetter];\n\t  } else {\n\t    propertyBindings.push(attributeSetter);\n\t  }\n\t\n\t  function attributeSetter(model) {\n\t    element.setAttributeNS(null, attrName, model[modelPropertyName]);\n\t  }\n\t}\n\tfunction bindTextContent(element, allBindings) {\n\t  // todo reduce duplication\n\t  var value = element.nodeValue;\n\t  if (!value) return; // unary attribute?\n\t\n\t  var modelNameMatch = value.match(BINDING_EXPR);\n\t  if (!modelNameMatch) return; // does not look like a binding\n\t\n\t  var modelPropertyName = modelNameMatch[1];\n\t  var isSimpleValue = modelPropertyName.indexOf('.') < 0;\n\t\n\t  var propertyBindings = allBindings[modelPropertyName];\n\t  if (!propertyBindings) {\n\t    propertyBindings = allBindings[modelPropertyName] = [textSetter];\n\t  } else {\n\t    propertyBindings.push(textSetter);\n\t  }\n\t\n\t  function textSetter(model) {\n\t    element.nodeValue = model[modelPropertyName];\n\t  }\n\t}\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\tmodule.exports = createDomparser();\n\t\n\tfunction createDomparser() {\n\t  if (typeof DOMParser === 'undefined') {\n\t    return {\n\t      parseFromString: fail\n\t    };\n\t  }\n\t  return new DOMParser();\n\t}\n\t\n\tfunction fail() {\n\t  throw new Error('DOMParser is not supported by this platform. Please open issue here https://github.com/anvaka/simplesvg');\n\t}\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=app> <scene :animation=animation></scene> </div>\";\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=scene-container v-el:container> <svg> <g v-el:scene> <path v-el=path stroke=black fill=transparent /> </g> </svg> <div class=editor> <a href=https://en.wikipedia.org/wiki/B%C3%A9zier_curve><h3>Bezier points</h3></a> <ul> <li v-for=\\\"item in animation\\\"> <label for={{item.name}}>{{item.name}}</label> <input type=text v-model=item.code id={{item.name}} v-on:change=updateAnimation(item)> </li> </ul> <code><pre>\\nfrom - angle where curve starts\\nto - angle where curve ends\\nalpha - animated angle\\n    </pre></code> </div> </div>\";\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(59)\n\t__vue_script__ = __webpack_require__(27)\n\t__vue_template__ = __webpack_require__(70)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(60)\n\t__vue_script__ = __webpack_require__(28)\n\t__vue_template__ = __webpack_require__(71)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.22\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  queue.length = 0;\n\t  runBatcherQueue(userQueue);\n\t  // user watchers triggered more internal watchers\n\t  if (queue.length) {\n\t    runBatcherQueue(queue);\n\t  }\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.22';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 75 */\n/***/ function(module, exports) {\n\n\t/**\n\t * This module unifies handling of mouse whee event across different browsers\n\t *\n\t * See https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel?redirectlocale=en-US&redirectslug=DOM%2FMozilla_event_reference%2Fwheel\n\t * for more details\n\t *\n\t * Usage:\n\t *  var addWheelListener = require('wheel').addWheelListener;\n\t *  var removeWheelListener = require('wheel').removeWheelListener;\n\t *  addWheelListener(domElement, function (e) {\n\t *    // mouse wheel event\n\t *  });\n\t *  removeWheelListener(domElement, function);\n\t */\n\t// by default we shortcut to 'addEventListener':\n\t\n\tmodule.exports = addWheelListener;\n\t\n\t// But also expose \"advanced\" api with unsubscribe:\n\tmodule.exports.addWheelListener = addWheelListener;\n\tmodule.exports.removeWheelListener = removeWheelListener;\n\t\n\t\n\tvar prefix = \"\", _addEventListener, _removeEventListener, onwheel, support;\n\t\n\tdetectEventModel(typeof window !== 'undefined' && window,\n\t                typeof document !== 'undefined' && document);\n\t\n\tfunction addWheelListener( elem, callback, useCapture ) {\n\t    _addWheelListener( elem, support, callback, useCapture );\n\t\n\t    // handle MozMousePixelScroll in older Firefox\n\t    if( support == \"DOMMouseScroll\" ) {\n\t        _addWheelListener( elem, \"MozMousePixelScroll\", callback, useCapture );\n\t    }\n\t};\n\t\n\tfunction removeWheelListener( elem, callback, useCapture ) {\n\t    _removeWheelListener( elem, support, callback, useCapture );\n\t\n\t    // handle MozMousePixelScroll in older Firefox\n\t    if( support == \"DOMMouseScroll\" ) {\n\t        _removeWheelListener( elem, \"MozMousePixelScroll\", callback, useCapture );\n\t    }\n\t};\n\t\n\tfunction _addWheelListener( elem, eventName, callback, useCapture ) {\n\t  // TODO: in theory this anonymous function may result in incorrect\n\t  // unsubscription in some browsers. But in practice, I don't think we should\n\t  // worry too much about it (those browsers are on the way out)\n\t  elem[ _addEventListener ]( prefix + eventName, support == \"wheel\" ? callback : function( originalEvent ) {\n\t    !originalEvent && ( originalEvent = window.event );\n\t\n\t    // create a normalized event object\n\t    var event = {\n\t      // keep a ref to the original event object\n\t      originalEvent: originalEvent,\n\t      target: originalEvent.target || originalEvent.srcElement,\n\t      type: \"wheel\",\n\t      deltaMode: originalEvent.type == \"MozMousePixelScroll\" ? 0 : 1,\n\t      deltaX: 0,\n\t      delatZ: 0,\n\t      clientX: originalEvent.clientX,\n\t      clientY: originalEvent.clientY,\n\t      preventDefault: function() {\n\t        originalEvent.preventDefault ?\n\t            originalEvent.preventDefault() :\n\t            originalEvent.returnValue = false;\n\t      },\n\t      stopPropagation: function() {\n\t        if(originalEvent.stopPropagation)\n\t          originalEvent.stopPropagation();\n\t      },\n\t      stopImmediatePropagation: function() {\n\t        if(originalEvent.stopImmediatePropagation)\n\t          originalEvent.stopImmediatePropagation();\n\t      }\n\t    };\n\t\n\t    // calculate deltaY (and deltaX) according to the event\n\t    if ( support == \"mousewheel\" ) {\n\t      event.deltaY = - 1/40 * originalEvent.wheelDelta;\n\t      // Webkit also support wheelDeltaX\n\t      originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );\n\t    } else {\n\t      event.deltaY = originalEvent.detail;\n\t    }\n\t\n\t    // it's time to fire the callback\n\t    return callback( event );\n\t\n\t  }, useCapture || false );\n\t}\n\t\n\tfunction _removeWheelListener( elem, eventName, callback, useCapture ) {\n\t  elem[ _removeEventListener ]( prefix + eventName, callback, useCapture || false );\n\t}\n\t\n\tfunction detectEventModel(window, document) {\n\t  if ( window && window.addEventListener ) {\n\t      _addEventListener = \"addEventListener\";\n\t      _removeEventListener = \"removeEventListener\";\n\t  } else {\n\t      _addEventListener = \"attachEvent\";\n\t      _removeEventListener = \"detachEvent\";\n\t      prefix = \"on\";\n\t  }\n\t\n\t  if (document) {\n\t    // detect available wheel event\n\t    support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n\t              document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n\t              \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\t  } else {\n\t    support = \"wheel\";\n\t  }\n\t}\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** static/app.fe28b6e5dd3f8a8b57b7.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 24eba623599016d13d9b\n **/","import Vue from 'vue'\nimport App from './App'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: 'body',\n  components: { App }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_core.js\n ** module id = 1\n ** module chunks = 0\n **/","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_descriptors.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_fails.js\n ** module id = 3\n ** module chunks = 0\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_global.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Returns transformation matrix for an element. If no such transformation matrix\n * exist - a new one is created.\n */\nmodule.exports = getTransform\n\nfunction getTransform(svgElement) {\n  var baseVal = svgElement.transform.baseVal\n  if (baseVal.numberOfItems) return baseVal.getItem(0)\n\n  var owner = svgElement.ownerSVGElement || svgElement\n  var transform = owner.createSVGTransform()\n  svgElement.transform.baseVal.appendItem(transform)\n\n  return transform\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/panzoom/lib/getTransform.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/object/create.js\n ** module id = 6\n ** module chunks = 0\n **/","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_an-object.js\n ** module id = 7\n ** module chunks = 0\n **/","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_export.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_is-object.js\n ** module id = 9\n ** module chunks = 0\n **/","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\r\nvar $keys       = require('./_object-keys-internal')\r\n  , enumBugKeys = require('./_enum-bug-keys');\r\n\r\nmodule.exports = Object.keys || function keys(O){\r\n  return $keys(O, enumBugKeys);\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-keys.js\n ** module id = 10\n ** module chunks = 0\n **/","import queryHelper from './queryHelper.js'\n\nlet ignoreNextHashChange = false\nvar state = createState()\n\nlet defaultState = {\n  x0: '100 * Math.cos(from)',\n  y0: '100 * Math.sin(from)',\n  x1: '130 * Math.cos(from + alpha)',\n  y1: '130 * Math.sin(from + alpha)',\n  x2: '130 * Math.cos(to - alpha)',\n  y2: '130 * Math.sin(to - alpha)',\n  x3: '100 * Math.cos(to)',\n  y3: '100 * Math.sin(to)'\n}\n\nlet defaultKeys = ['x0', 'y0', 'x1', 'y1', 'x2', 'y2', 'x3', 'y3']\n\nsetStateFromHash()\n\nexport default state;\n\nexport {\n  setStateFromHash as setStateFromHash,\n  setHashFromState as setHashFromState\n}\n\nfunction createState() {\n  return {\n    animation: []\n  }\n}\n\nfunction setStateFromHash() {\n  if (ignoreNextHashChange) {\n    ignoreNextHashChange = false\n    return\n  }\n\n  if (typeof window !== 'undefined') {\n    let hash = window.location.hash\n    let parsed = queryHelper.parse(hash)\n    state.animation.length = 0;\n\n    defaultKeys.forEach(name => {\n      state.animation.push({\n        name,\n        code: parsed.search[name] || defaultState[name]\n      });\n    })\n  }\n}\n\nfunction setHashFromState() {\n  let animation = state.animation;\n  var bag = Object.create(null);\n\n  animation.forEach(item => {\n    bag[item.name] = item.code\n  })\n\n  let hash = '#/?' + queryHelper.search(bag)\n\n  let currentHash = window.location.hash\n  if (currentHash !== hash) {\n    ignoreNextHashChange = true\n    window.location.replace(hash)\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/appState.js\n **/","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_defined.js\n ** module id = 12\n ** module chunks = 0\n **/","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_dom-create.js\n ** module id = 13\n ** module chunks = 0\n **/","// IE 8- don't enum bug keys\r\nmodule.exports = (\r\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\r\n).split(',');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_enum-bug-keys.js\n ** module id = 14\n ** module chunks = 0\n **/","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_iobject.js\n ** module id = 15\n ** module chunks = 0\n **/","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-dp.js\n ** module id = 16\n ** module chunks = 0\n **/","var shared = require('./_shared')('keys')\r\n  , uid    = require('./_uid');\r\nmodule.exports = function(key){\r\n  return shared[key] || (shared[key] = uid(key));\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_shared-key.js\n ** module id = 17\n ** module chunks = 0\n **/","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-integer.js\n ** module id = 18\n ** module chunks = 0\n **/","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-iobject.js\n ** module id = 19\n ** module chunks = 0\n **/","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-object.js\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = svg;\n\nsvg.compile = require('./lib/compile');\n\nvar compileTemplate = svg.compileTemplate = require('./lib/compile_template');\n\nvar domEvents = require('add-event-listener');\n\nvar svgns = \"http://www.w3.org/2000/svg\";\nvar xlinkns = \"http://www.w3.org/1999/xlink\";\n\nfunction svg(element, attrBag) {\n  var svgElement = augment(element);\n  if (attrBag === undefined) {\n    return svgElement;\n  }\n\n  svgElement.attr(attrBag);\n\n  return svgElement;\n}\n\nfunction augment(element) {\n  var svgElement = element;\n\n  if (typeof element === \"string\") {\n    svgElement = window.document.createElementNS(svgns, element);\n  } else if (element.simplesvg) {\n    return element;\n  }\n\n  var compiledTempalte;\n\n  svgElement.simplesvg = true; // this is not good, since we are monkey patching svg\n  svgElement.attr = attr;\n  svgElement.append = append;\n  svgElement.link = link;\n  svgElement.text = text;\n\n  // add easy eventing\n  svgElement.on = on;\n  svgElement.off = off;\n\n  // data binding:\n  svgElement.dataSource = dataSource;\n\n  return svgElement;\n\n  function dataSource(model) {\n    if (!compiledTempalte) compiledTempalte = compileTemplate(svgElement);\n    compiledTempalte.link(model);\n    return svgElement;\n  }\n\n  function on(name, cb, useCapture) {\n    domEvents.addEventListener(svgElement, name, cb, useCapture);\n    return svgElement;\n  }\n\n  function off(name, cb, useCapture) {\n    domEvents.removeEventListener(svgElement, name, cb, useCapture);\n    return svgElement;\n  }\n\n  function append(content) {\n    var child = svg(content);\n    svgElement.appendChild(child);\n\n    return child;\n  }\n\n  function attr(name, value) {\n    if (arguments.length === 2) {\n      if (value !== null) {\n        svgElement.setAttributeNS(null, name, value);\n      } else {\n        svgElement.removeAttributeNS(null, name);\n      }\n\n      return svgElement;\n    }\n    if (typeof name === 'string') {\n      // someone wants to get value of an attribute:\n      return svgElement.getAttributeNS(null, name);\n    }\n\n    if (typeof name !== 'object') throw new Error('attr() expects to have either string or object as first argument');\n\n    var attrBag = name;\n    var attributes = Object.keys(attrBag);\n    for (var i = 0; i < attributes.length; ++i) {\n      var attributeName = attributes[i];\n      var value = attrBag[attributeName];\n      if (attributeName === 'link') {\n        svgElement.link(value);\n      } else {\n        svgElement.attr(attributeName, value);\n      }\n    }\n\n    return svgElement;\n  }\n\n  function link(target) {\n    if (arguments.length) {\n      svgElement.setAttributeNS(xlinkns, \"xlink:href\", target);\n      return svgElement;\n    }\n\n    return svgElement.getAttributeNS(xlinkns, \"xlink:href\");\n  }\n\n  function text(textContent) {\n    if (textContent !== undefined) {\n        svgElement.textContent = textContent;\n        return svgElement;\n    }\n    return svgElement.textContent;\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplesvg/index.js\n ** module id = 21\n ** module chunks = 0\n **/","addEventListener.removeEventListener = removeEventListener\naddEventListener.addEventListener = addEventListener\n\nmodule.exports = addEventListener\n\nvar Events = null\n\nfunction addEventListener(el, eventName, listener, useCapture) {\n  Events = Events || (\n    document.addEventListener ?\n    {add: stdAttach, rm: stdDetach} :\n    {add: oldIEAttach, rm: oldIEDetach}\n  )\n  \n  return Events.add(el, eventName, listener, useCapture)\n}\n\nfunction removeEventListener(el, eventName, listener, useCapture) {\n  Events = Events || (\n    document.addEventListener ?\n    {add: stdAttach, rm: stdDetach} :\n    {add: oldIEAttach, rm: oldIEDetach}\n  )\n  \n  return Events.rm(el, eventName, listener, useCapture)\n}\n\nfunction stdAttach(el, eventName, listener, useCapture) {\n  el.addEventListener(eventName, listener, useCapture)\n}\n\nfunction stdDetach(el, eventName, listener, useCapture) {\n  el.removeEventListener(eventName, listener, useCapture)\n}\n\nfunction oldIEAttach(el, eventName, listener, useCapture) {\n  if(useCapture) {\n    throw new Error('cannot useCapture in oldIE')\n  }\n\n  el.attachEvent('on' + eventName, listener)\n}\n\nfunction oldIEDetach(el, eventName, listener, useCapture) {\n  el.detachEvent('on' + eventName, listener)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/add-event-listener/index.js\n ** module id = 22\n ** module chunks = 0\n **/","var BezierEasing = require('bezier-easing')\n\n// Predefined set of animations. Similar to CSS easing functions\nvar animations = {\n  ease:  BezierEasing(0.25, 0.1, 0.25, 1),\n  easeIn: BezierEasing(0.42, 0, 1, 1),\n  easeOut: BezierEasing(0, 0, 0.58, 1),\n  easeInOut: BezierEasing(0.42, 0, 0.58, 1),\n  linear: BezierEasing(0, 0, 1, 1)\n}\n\n\nmodule.exports = animate;\n\nfunction animate(source, target, options) {\n  var start= Object.create(null)\n  var diff = Object.create(null)\n  options = options || {}\n  // We let clients specify their own easing function\n  var easing = (typeof options.easing === 'function') ? options.easing : animations[options.easing]\n\n  // if nothing is specified, default to ease (similar to CSS animations)\n  if (!easing) {\n    if (options.easing) {\n      console.warn('Unknown easing function in amator: ' + options.easing);\n    }\n    easing = animations.ease\n  }\n\n  var step = typeof options.step === 'function' ? options.step : noop\n  var done = typeof options.done === 'function' ? options.done : noop\n\n  var scheduler = getScheduler(options.scheduler)\n\n  var keys = Object.keys(target)\n  keys.forEach(function(key) {\n    start[key] = source[key]\n    diff[key] = target[key] - source[key]\n  })\n\n  var durationInMs = options.duration || 400\n  var durationInFrames = Math.max(1, durationInMs * 0.06) // 0.06 because 60 frames pers 1,000 ms\n  var previousAnimationId\n  var frame = 0\n\n  previousAnimationId = scheduler.next(loop)\n\n  return {\n    cancel: cancel\n  }\n\n  function cancel() {\n    scheduler.cancel(previousAnimationId)\n    previousAnimationId = 0\n  }\n\n  function loop() {\n    var t = easing(frame/durationInFrames)\n    frame += 1\n    setValues(t)\n    if (frame <= durationInFrames) {\n      previousAnimationId = scheduler.next(loop)\n      step(source)\n    } else {\n      previousAnimationId = 0\n      setTimeout(function() { done(source) }, 0)\n    }\n  }\n\n  function setValues(t) {\n    keys.forEach(function(key) {\n      source[key] = diff[key] * t + start[key]\n    })\n  }\n}\n\nfunction noop() { }\n\nfunction getScheduler(scheduler) {\n  if (!scheduler) {\n    var canRaf = typeof window !== 'undefined' && window.requestAnimationFrame\n    return canRaf ? rafScheduler() : timeoutScheduler()\n  }\n  if (typeof scheduler.next !== 'function') throw new Error('Scheduler is supposed to have next(cb) function')\n  if (typeof scheduler.cancel !== 'function') throw new Error('Scheduler is supposed to have cancel(handle) function')\n\n  return scheduler\n}\n\nfunction rafScheduler() {\n  return {\n    next: window.requestAnimationFrame.bind(window),\n    cancel: window.cancelAnimationFrame.bind(window)\n  }\n}\n\nfunction timeoutScheduler() {\n  return {\n    next: function(cb) {\n      return setTimeout(cb, 1000/60)\n    },\n    cancel: function (id) {\n      return clearTimeout(id)\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/amator/index.js\n ** module id = 23\n ** module chunks = 0\n **/","var angleStep = Math.PI/180 * 0.5;\n\nfunction Curve(from, to, func) {\n  this.alpha = 0;\n  this.from = from;\n  this.to = to;\n\n  this.step = function() {\n    this.x0 = func.x0(this);\n    this.y0 = func.y0(this);\n\n    this.x1 = func.x1(this);\n    this.y1 = func.y1(this);\n    this.x2 = func.x2(this);\n    this.y2 = func.y2(this);\n\n    this.x3 = func.x3(this);\n    this.y3 = func.y3(this);\n\n    this.alpha += angleStep;\n  }\n\n  this.step();\n}\n\nmodule.exports = Curve;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/curve.js\n **/","let empty = {\n  path: '',\n  search: {}\n}\nlet queryHelper = {\n  parse,\n  search\n}\n\nexport default queryHelper;\n\nfunction parse(qs) {\n  if (!qs) return empty\n\n  let parts = qs.match(/^#\\/([^?]*)\\?(.*)$/)\n  if (!parts) return empty\n\n  let search = Object.create(null)\n  if (parts[2]) {\n    parts[2].split('&').forEach(keyValuePair => {\n      let part = keyValuePair.split('=')\n      let key = window.decodeURIComponent(part[0])\n      let value = window.decodeURIComponent(part[1])\n      search[key] = value\n    })\n  }\n\n  let path = parts[1]\n  return {\n    path, search\n  }\n}\n\nfunction search(obj) {\n  return Object.keys(obj).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(obj[key])).join('&')\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/queryHelper.js\n **/","var svg = require('simplesvg')\nvar panzoom = require('panzoom')\nvar Curve = require('./curve.js');\n\nvar count = 10;\nvar step = Math.PI * 2/count;\n\nmodule.exports = createRenderer\n\nfunction createRenderer(scene, functions) {\n  let zoomer = panzoom(scene)\n  let path = svg('path', {\n    stroke: '#000',\n    'stroke-opacity': 0.7,\n    fill: 'transparent'\n  });\n  var curves = []\n  var compiledFunctions = compileFunctions(functions);\n\n  scene.appendChild(path);\n\n  initCurves();\n  var lastRaf = window.requestAnimationFrame(frame);\n\n  return {\n    dispose,\n    getPanzoom,\n    recompile\n  }\n\n  function recompile() {\n    try {\n      var newCompiledFunction = compileFunctions(functions);\n      Object.assign(compiledFunctions, newCompiledFunction);\n    } catch (e) {\n      return e;\n    }\n  }\n\n  function frame() {\n    lastRaf = window.requestAnimationFrame(frame);\n    var data = curves.map(toDataCurve).join(' ');\n    path.setAttributeNS(null, 'd', data);\n\n    curves.forEach(moveCurve);\n  }\n\n  function moveCurve(curve) {\n    curve.step();\n\n    curve.fromUI.attr({\n      cx: curve.x1,\n      cy: curve.y1\n    });\n\n    curve.toUI.attr({\n      cx: curve.x2,\n      cy: curve.y2\n    });\n  }\n\n  function getPanzoom() {\n    return zoomer\n  }\n\n  function dispose() {\n    zoomer.dispose()\n    window.cancelAnimationFrame(lastRaf);\n  }\n\n  function initCurves() {\n    for (var i = 0; i < count; ++i) {\n      var from = i * step\n      var to = (i + 1) * step\n\n      var model = new Curve(from, to, compiledFunctions)\n\n      model.fromUI = makeUI(model.x1, model.y1, '#E91E63')\n      model.toUI = makeUI(model.x2, model.y2, '#2196F3')\n\n      curves.push(model)\n    }\n  }\n\n  function makeUI(x, y, color) {\n    var ui = svg('circle', {\n      r: 2,\n      fill: color,\n      cx: x,\n      cy: y\n    });\n\n    scene.appendChild(ui);\n    return ui;\n  }\n}\n\nfunction compileFunctions(all, result) {\n  result = result || Object.create(null);\n\n  all.forEach(compileOne);\n\n  return result;\n\n  function compileOne(definition) {\n    var code = definition.code\n    var safeCheck = safe(code)\n\n    if (!safeCheck) throw new Error('Unsafe code: ' + safeCheck)\n\n    var compiledFunction = new Function('from', 'to', 'alpha', 'window', 'document', 'return ' +  code); // eslint-disable-line\n\n    result[definition.name] = function (curve) {\n      return compiledFunction.call(undefined, curve.from, curve.to, curve.alpha); // eslint-disable-line\n    };\n  }\n}\n\nfunction safe(code) {\n  // Well, I'm not sure if there is any need for this.\n  // Yes, it's insecure. But I don't know how to prevent XSS anyway...\n  // I mean I know lots of ways to hack my own protection.\n  return true;\n}\n\nfunction toDataCurve(curve) {\n  return 'M' + curve.x0 + ' ' + curve.y0 +\n      ' C' + curve.x1 + ' ' + curve.y1 +\n      ', ' + curve.x2 + ' ' + curve.y2 +\n      ', ' + curve.x3 + ' ' + curve.y3;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/renderer.js\n **/","<template>\n  <div id=\"app\">\n    <scene :animation='animation'></scene>\n  </div>\n</template>\n\n<script>\nimport Scene from './Scene.vue'\nimport state from './lib/appState.js'\n\nexport default {\n  components: {\n    Scene\n  },\n\n  data() {\n    return {\n      animation: state.animation\n    }\n  }\n}\n</script>\n\n<style>\nhtml {\n  height: 100%;\n}\n\nbody {\n  display: flex;\n  height: 100%;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  font-family: Helvetica, sans-serif;\n  position: fixed;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nsvg {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?7939ce55\n **/","<template>\n<div class='scene-container' v-el:container>\n  <svg>\n    <g v-el:scene>\n      <path v-el='path' stroke='black' fill='transparent'/>\n    </g>\n  </svg>\n  <div class='editor'>\n    <a href='https://en.wikipedia.org/wiki/B%C3%A9zier_curve'><h3>Bezier points</h3></a>\n    <ul>\n      <li v-for='item in animation'>\n        <label for='{{item.name}}'>{{item.name}}</label>\n        <input type='text' v-model='item.code' id='{{item.name}}' v-on:change='updateAnimation(item)'>\n      </li>\n    </ul>\n    <code><pre>\nfrom - angle where curve starts\nto - angle where curve ends\nalpha - animated angle\n    </pre></code>\n  </div>\n</div>\n</template>\n\n<style>\na {\n  text-decoration: none;\n}\n\nsvg {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.scene-container {\n  position: absolute;\n  display: flex;\n  left: 0;\n  right: 0;\n  height: 100%;\n}\n.editor {\n  position: absolute;\n  z-index: 1;\n  background-color: rgba(230, 230, 230, 0.8);\n  padding: 0 12px;\n}\n.editor input {\n  width: 230px;\n}\n\n.editor ul {\n  padding: 0;\n}\n\n.editor li {\n  list-style-type: none;\n}\n\n@media (max-width: 600px) {\n  .editor {\n    display: none;\n  }\n}\n</style>\n\n<script>\nimport createRenderer from './lib/renderer.js'\nimport {setHashFromState} from './lib/appState.js'\n\nexport default {\n  props: ['animation'],\n\n  methods: {\n    updateAnimation(item) {\n      let error = this.renderer.recompile();\n      if (!error) setHashFromState()\n    }\n  },\n\n  ready() {\n    let scene = this.$els.scene\n    this.renderer = createRenderer(scene, this.animation)\n\n    let container = this.$els.container\n    let zoomer = this.renderer.getPanzoom()\n    zoomer.moveBy(container.clientWidth/2, container.clientHeight/2)\n  },\n\n  destroyed() {\n    this.renderer.dispose()\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Scene.vue?c552a874\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/object/assign.js\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/object/keys.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  if (mX1 !== mY1 || mX2 !== mY2) {\n    for (var i = 0; i < kSplineTableSize; ++i) {\n      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    if (mX1 === mY1 && mX2 === mY2) {\n      return x; // linear\n    }\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bezier-easing/src/index.js\n ** module id = 31\n ** module chunks = 0\n **/","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/object/assign.js\n ** module id = 32\n ** module chunks = 0\n **/","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D){\n  return $Object.create(P, D);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/object/create.js\n ** module id = 33\n ** module chunks = 0\n **/","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/object/keys.js\n ** module id = 34\n ** module chunks = 0\n **/","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_a-function.js\n ** module id = 35\n ** module chunks = 0\n **/","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_array-includes.js\n ** module id = 36\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_cof.js\n ** module id = 37\n ** module chunks = 0\n **/","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_ctx.js\n ** module id = 38\n ** module chunks = 0\n **/","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_has.js\n ** module id = 39\n ** module chunks = 0\n **/","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_hide.js\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = require('./_global').document && document.documentElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_html.js\n ** module id = 41\n ** module chunks = 0\n **/","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\r\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_ie8-dom-define.js\n ** module id = 42\n ** module chunks = 0\n **/","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-assign.js\n ** module id = 43\n ** module chunks = 0\n **/","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\nvar anObject    = require('./_an-object')\r\n  , dPs         = require('./_object-dps')\r\n  , enumBugKeys = require('./_enum-bug-keys')\r\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\r\n  , Empty       = function(){ /* empty */ }\r\n  , PROTOTYPE   = 'prototype';\r\n\r\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\r\nvar createDict = function(){\r\n  // Thrash, waste and sodomy: IE GC bug\r\n  var iframe = require('./_dom-create')('iframe')\r\n    , i      = enumBugKeys.length\r\n    , gt     = '>'\r\n    , iframeDocument;\r\n  iframe.style.display = 'none';\r\n  require('./_html').appendChild(iframe);\r\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\r\n  // createDict = iframe.contentWindow.Object;\r\n  // html.removeChild(iframe);\r\n  iframeDocument = iframe.contentWindow.document;\r\n  iframeDocument.open();\r\n  iframeDocument.write('<script>document.F=Object</script' + gt);\r\n  iframeDocument.close();\r\n  createDict = iframeDocument.F;\r\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\r\n  return createDict();\r\n};\r\n\r\nmodule.exports = Object.create || function create(O, Properties){\r\n  var result;\r\n  if(O !== null){\r\n    Empty[PROTOTYPE] = anObject(O);\r\n    result = new Empty;\r\n    Empty[PROTOTYPE] = null;\r\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\r\n    result[IE_PROTO] = O;\r\n  } else result = createDict();\r\n  return Properties === undefined ? result : dPs(result, Properties);\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-create.js\n ** module id = 44\n ** module chunks = 0\n **/","var dP       = require('./_object-dp')\r\n  , anObject = require('./_an-object')\r\n  , getKeys  = require('./_object-keys');\r\n\r\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\r\n  anObject(O);\r\n  var keys   = getKeys(Properties)\r\n    , length = keys.length\r\n    , i = 0\r\n    , P;\r\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\r\n  return O;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-dps.js\n ** module id = 45\n ** module chunks = 0\n **/","exports.f = Object.getOwnPropertySymbols;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-gops.js\n ** module id = 46\n ** module chunks = 0\n **/","var has          = require('./_has')\r\n  , toIObject    = require('./_to-iobject')\r\n  , arrayIndexOf = require('./_array-includes')(false)\r\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\r\n\r\nmodule.exports = function(object, names){\r\n  var O      = toIObject(object)\r\n    , i      = 0\r\n    , result = []\r\n    , key;\r\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\r\n  // Don't enum bug & hidden keys\r\n  while(names.length > i)if(has(O, key = names[i++])){\r\n    ~arrayIndexOf(result, key) || result.push(key);\r\n  }\r\n  return result;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-keys-internal.js\n ** module id = 47\n ** module chunks = 0\n **/","exports.f = {}.propertyIsEnumerable;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-pie.js\n ** module id = 48\n ** module chunks = 0\n **/","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-sap.js\n ** module id = 49\n ** module chunks = 0\n **/","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_property-desc.js\n ** module id = 50\n ** module chunks = 0\n **/","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_shared.js\n ** module id = 51\n ** module chunks = 0\n **/","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-index.js\n ** module id = 52\n ** module chunks = 0\n **/","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-length.js\n ** module id = 53\n ** module chunks = 0\n **/","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-primitive.js\n ** module id = 54\n ** module chunks = 0\n **/","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_uid.js\n ** module id = 55\n ** module chunks = 0\n **/","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/es6.object.assign.js\n ** module id = 56\n ** module chunks = 0\n **/","var $export = require('./_export')\r\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\n$export($export.S, 'Object', {create: require('./_object-create')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/es6.object.create.js\n ** module id = 57\n ** module chunks = 0\n **/","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object')\n  , $keys    = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function(){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/es6.object.keys.js\n ** module id = 58\n ** module chunks = 0\n **/","/* globals SVGElement */\n/**\n * Allows to drag and zoom svg elements\n */\nvar wheel = require('wheel')\nvar animate = require('amator');\nvar zoomTo = require('./lib/zoomTo.js')\nvar kinetic = require('./lib/kinetic.js')\nvar moveBy = require('./lib/moveBy.js')\nvar moveTo = require('./lib/moveTo.js')\nvar createEvent = require('./lib/createEvent.js')\n\nvar speed = 0.065\n\nmodule.exports = createPanZoom;\n\nfunction createPanZoom(svgElement, options) {\n  var elementValid = (svgElement instanceof SVGElement)\n\n  if (!elementValid) {\n    throw new Error('svg element is required for svg.panzoom to work')\n  }\n\n  var owner = svgElement.ownerSVGElement\n  if (!owner) {\n    throw new Error(\n      'Do not apply panzoom to the root <svg> element. ' +\n      'Use its child instead (e.g. <g></g>). ' +\n      'As of March 2016 only FireFox supported transform on the root element')\n  }\n\n  options = options || {}\n\n  var beforeWheel = options.beforeWheel || noop\n\n  var touchInProgress = false\n\n  // We only need to fire panstart when actual move happens\n  var panstartFired = false\n\n  // cache mouse coordinates here\n  var mouseX\n  var mouseY\n\n  var pinchZoomLength\n\n  var dragObject\n  var prevSelectStart\n  var prevDragStart\n\n  var smoothScroll = kinetic(svgElement, scroll)\n  var previousAnimation\n\n  listenForEvents()\n\n  return {\n    dispose: dispose,\n    moveBy: internalMoveBy,\n    centerOn: centerOn\n  }\n\n  function centerOn(ui) {\n    var parent = ui.ownerSVGElement\n    if (!parent) throw new Error('ui element is required to be within the scene')\n\n    var clientRect = ui.getBoundingClientRect()\n    var cx = clientRect.left + clientRect.width/2\n    var cy = clientRect.top + clientRect.height/2\n\n    var container = parent.getBoundingClientRect()\n    var dx = container.width/2 - cx\n    var dy = container.height/2 - cy\n\n    internalMoveBy(dx, dy, true)\n  }\n\n  function internalMoveBy(dx, dy, smooth) {\n    if (!smooth) {\n      moveBy(svgElement, dx, dy)\n      return\n    }\n\n    if (previousAnimation) previousAnimation.cancel()\n\n    var from = { x: 0, y: 0 }\n    var to = { x: dx, y : dy }\n    var lastX = 0\n    var lastY = 0\n\n    previousAnimation = animate(from, to, {\n      step: function(v) {\n        moveBy(svgElement, v.x - lastX, v.y - lastY)\n\n        lastX = v.x\n        lastY = v.y\n      }\n    })\n  }\n\n  function scroll(x, y) {\n    moveTo(svgElement, x, y)\n  }\n\n  function dispose() {\n    wheel.removeWheelListener(svgElement, onMouseWheel)\n    owner.removeEventListener('mousedown', onMouseDown)\n\n    smoothScroll.cancel()\n\n    releaseDocumentMouse()\n    releaseTouches()\n\n    triggerPanEnd()\n  }\n\n  function listenForEvents() {\n    owner.addEventListener('mousedown', onMouseDown)\n    owner.addEventListener('touchstart', onTouch)\n    wheel.addWheelListener(owner, onMouseWheel)\n  }\n\n  function onTouch(e) {\n    if (e.touches.length === 1) {\n      return handleSignleFingerTouch(e, e.touches[0])\n    } else if (e.touches.length === 2) {\n      // handleTouchMove() will care about pinch zoom.\n      e.stopPropagation()\n      e.preventDefault()\n\n      pinchZoomLength = getPinchZoomLength(e.touches[1], e.touches[1])\n    }\n  }\n\n  function handleSignleFingerTouch(e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    var touch = e.touches[0]\n    mouseX = touch.clientX\n    mouseY = touch.clientY\n\n    if (!touchInProgress) {\n      touchInProgress = true\n      document.addEventListener('touchmove', handleTouchMove)\n      document.addEventListener('touchend', handleTouchEnd)\n      document.addEventListener('touchcancel', handleTouchEnd)\n    }\n  }\n\n  function handleTouchMove(e) {\n    triggerPanStart()\n\n    if (e.touches.length === 1) {\n      e.stopPropagation()\n      var touch = e.touches[0]\n\n      var dx = touch.clientX - mouseX\n      var dy = touch.clientY - mouseY\n\n      mouseX = touch.clientX\n      mouseY = touch.clientY\n      internalMoveBy(dx, dy)\n    } else if (e.touches.length === 2) {\n      // it's a zoom, let's find direction\n      var t1 = e.touches[0]\n      var t2 = e.touches[1]\n      var currentPinchLength = getPinchZoomLength(t1, t2)\n\n      var delta = 0\n      if (currentPinchLength < pinchZoomLength) {\n        delta = 1\n      } else if (currentPinchLength > pinchZoomLength) {\n        delta = -1\n      }\n\n      var scaleMultiplier = getScaleMultiplier(delta)\n\n      mouseX = (t1.clientX + t2.clientX)/2\n      mouseY = (t1.clientY + t2.clientY)/2\n\n      zoomTo(svgElement, mouseX, mouseY, scaleMultiplier)\n\n      pinchZoomLength = currentPinchLength\n      e.stopPropagation()\n      e.preventDefault()\n    }\n  }\n\n  function handleTouchEnd(e) {\n    if (e.touches.length > 0) {\n      mouseX = e.touches[0].clientX\n      mouseY = e.touches[0].clientY\n    } else {\n      touchInProgress = false\n      triggerPanEnd()\n      releaseTouches()\n    }\n  }\n\n  function getPinchZoomLength(finger1, finger2) {\n    return (finger1.clientX - finger2.clientX) * (finger1.clientX - finger2.clientX) +\n      (finger1.clientY - finger2.clientY) * (finger1.clientY - finger2.clientY)\n  }\n\n  function onMouseDown(e) {\n    if (touchInProgress) {\n      // modern browsers will fire mousedown for touch events too\n      // we do not want this, since touch is handled separately.\n      e.stopPropagation()\n      return false;\n    }\n    // for IE, left click == 1\n    // for Firefox, left click == 0\n    var isLeftButton = ((e.button === 1 && window.event !== null) || e.button === 0)\n    if (!isLeftButton) return\n\n    mouseX = e.clientX\n    mouseY = e.clientY\n\n    // We need to listen on document itself, since mouse can go outside of the\n    // window, and we will loose it\n    document.addEventListener('mousemove', onMouseMove)\n    document.addEventListener('mouseup', onMouseUp)\n\n    // prevent text selection\n    dragObject = e.target || e.srcElement\n    prevSelectStart = window.document.onselectstart\n    prevDragStart = window.document.ondragstart\n\n    window.document.onselectstart = disabled\n    dragObject.ondragstart = disabled\n\n    return false\n  }\n\n  function onMouseMove(e) {\n    // no need to worry about mouse events when touch is happening\n    if (touchInProgress) return\n\n    triggerPanStart()\n\n    var dx = e.clientX - mouseX\n    var dy = e.clientY - mouseY\n\n    mouseX = e.clientX\n    mouseY = e.clientY\n    internalMoveBy(dx, dy)\n  }\n\n  function onMouseUp() {\n    window.document.onselectstart = prevSelectStart\n    if (dragObject) dragObject.ondragstart = prevDragStart\n\n    triggerPanEnd()\n    releaseDocumentMouse()\n  }\n\n  function releaseDocumentMouse() {\n    document.removeEventListener('mousemove', onMouseMove)\n    document.removeEventListener('mouseup', onMouseUp)\n    panstartFired = false\n  }\n\n  function releaseTouches() {\n    document.removeEventListener('touchmove', handleTouchMove);\n    document.removeEventListener('touchend', handleTouchEnd);\n    document.removeEventListener('touchcancel', handleTouchEnd);\n    panstartFired = false\n  }\n\n  function onMouseWheel(e) {\n    // if client does not want to handle this event - just ignore the call\n    if (beforeWheel(e)) return\n\n    smoothScroll.cancel()\n\n    var scaleMultiplier = getScaleMultiplier(e.deltaY)\n\n    if (scaleMultiplier !== 1) {\n      zoomTo(svgElement, e.clientX, e.clientY, scaleMultiplier)\n      e.preventDefault()\n    }\n  }\n\n  function getScaleMultiplier(delta) {\n    var scaleMultiplier = 1\n    if (delta > 0) { // zoom out\n      scaleMultiplier = (1 - speed)\n    } else if (delta < 0) { // zoom in\n      scaleMultiplier = (1 + speed)\n    }\n\n    return scaleMultiplier\n  }\n\n  function triggerPanStart() {\n    if (!panstartFired) {\n      triggerEvent('panstart')\n      panstartFired = true\n      smoothScroll.start()\n    }\n  }\n\n  function triggerPanEnd() {\n    if (panstartFired) {\n      smoothScroll.stop()\n      triggerEvent('panend')\n    }\n  }\n\n  function triggerEvent(name) {\n    var event = createEvent(name)\n    svgElement.dispatchEvent(event)\n  }\n}\n\nfunction disabled(e) {\n  e.stopPropagation()\n  return false\n}\n\nfunction noop() { }\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/panzoom/index.js\n ** module id = 61\n ** module chunks = 0\n **/","/* global Event */\nmodule.exports = createEvent;\n\nvar isIE = typeof Event !== 'function'\n\n/**\n * Constructs custom event. Works in IE too\n */\nfunction createEvent(name) {\n  if (isIE) {\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(name, true, true, undefined)\n    return evt\n  } else {\n    return new Event(name)\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/panzoom/lib/createEvent.js\n ** module id = 62\n ** module chunks = 0\n **/","/**\n * Allows smooth kinetic scrolling of the surface\n */\nvar getTransform = require('./getTransform.js');\n\nmodule.exports = kinetic;\n\nvar minVelocity = 10\nvar amplitude = 0.42\n\nfunction kinetic(element, scroll) {\n  var lastRect\n  var timestamp\n  var timeConstant = 342\n\n  var ticker\n  var vx, targetX, ax;\n  var vy, targetY, ay;\n\n  var raf\n\n  return {\n    start: start,\n    stop: stop,\n    cancel: dispose\n  }\n\n  function dispose() {\n    window.clearInterval(ticker)\n    window.cancelAnimationFrame(raf)\n  }\n\n  function start() {\n    lastRect = getRect()\n\n    ax = ay = vx = vy = 0\n    timestamp = new Date()\n\n    window.clearInterval(ticker)\n    window.cancelAnimationFrame(raf)\n\n    ticker = window.setInterval(track, 100);\n  }\n\n  function track() {\n    var now = Date.now();\n    var elapsed = now - timestamp;\n    timestamp = now;\n\n    var rect = getRect()\n\n    var dx = rect.x - lastRect.x\n    var dy = rect.y - lastRect.y\n\n    lastRect = rect\n\n    var dt = 1000 / (1 + elapsed)\n\n    // moving average\n    vx = 0.8 * dx * dt + 0.2 * vx\n    vy = 0.8 * dy * dt + 0.2 * vy\n  }\n\n  function stop() {\n    window.clearInterval(ticker);\n    window.cancelAnimationFrame(raf)\n\n    var rect = getRect()\n\n    targetX = rect.x\n    targetY = rect.y\n    timestamp = Date.now()\n\n    if (vx < -minVelocity || vx > minVelocity) {\n      ax = amplitude * vx\n      targetX += ax\n    }\n\n    if (vy < -minVelocity || vy > minVelocity) {\n      ay = amplitude * vy\n      targetY += ay\n    }\n\n    raf = window.requestAnimationFrame(autoScroll);\n  }\n\n  function autoScroll() {\n    var elapsed = Date.now() - timestamp\n\n    var moving = false\n    var dx = 0\n    var dy = 0\n\n    if (ax) {\n      dx = -ax * Math.exp(-elapsed / timeConstant)\n\n      if (dx > 0.5 || dx < -0.5) moving = true\n      else dx = ax = 0\n    }\n\n    if (ay) {\n      dy = -ay * Math.exp(-elapsed / timeConstant)\n\n      if (dy > 0.5 || dy < -0.5) moving = true\n      else dy = ay = 0\n    }\n\n    if (moving) {\n      scroll(targetX + dx, targetY + dy)\n      raf = window.requestAnimationFrame(autoScroll);\n    }\n  }\n\n  function getRect() {\n    var matrix = getTransform(element).matrix\n    return {\n      x: matrix.e,\n      y: matrix.f\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/panzoom/lib/kinetic.js\n ** module id = 63\n ** module chunks = 0\n **/","/**\n * Moves element by dx,dy offset without affecting its scale\n */\nvar getTransform = require('./getTransform.js')\n\nmodule.exports = moveBy\n\nfunction moveBy(svgElement, dx, dy) {\n  var transform = getTransform(svgElement)\n\n  svgElement.setAttribute(\n    'transform', 'matrix(' +\n      [\n        transform.matrix.a,\n        transform.matrix.b,\n        transform.matrix.c,\n        transform.matrix.d,\n        transform.matrix.e + dx,\n        transform.matrix.f + dy\n      ].join(' ') + ')'\n  )\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/panzoom/lib/moveBy.js\n ** module id = 64\n ** module chunks = 0\n **/","/**\n * Move element to given x,y coordinates without affecting its scale\n */\nvar getTransform = require('./getTransform.js')\n\nmodule.exports = moveTo\n\nfunction moveTo(svgElement, x, y) {\n  var transform = getTransform(svgElement)\n\n  svgElement.setAttribute(\n    'transform', 'matrix(' +\n      [\n        transform.matrix.a,\n        transform.matrix.b,\n        transform.matrix.c,\n        transform.matrix.d,\n        x,\n        y\n      ].join(' ') + ')'\n  )\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/panzoom/lib/moveTo.js\n ** module id = 65\n ** module chunks = 0\n **/","var getTransform = require('./getTransform.js')\n\nmodule.exports = zoomTo\n\n/**\n * Sets the new scale for an element, as if it was zoomed into `clientX, clientY`\n * point\n */\nfunction zoomTo(svgElement, clientX, clientY, scaleMultiplier) {\n  var transform = getTransform(svgElement)\n  var parent = svgElement.ownerSVGElement\n  var parentCTM = parent.getScreenCTM()\n  // we have consistent scale on both X and Y, thus we can use just one attribute:\n  var scale = transform.matrix.a * scaleMultiplier\n\n  var x = clientX * parentCTM.a - parentCTM.e\n  var y = clientY * parentCTM.a - parentCTM.f\n\n  svgElement.setAttribute(\n    'transform', 'matrix(' +\n      [\n        scale,\n        transform.matrix.b,\n        transform.matrix.c,\n        scale,\n        x - scaleMultiplier * (x - transform.matrix.e),\n        y - scaleMultiplier * (y - transform.matrix.f)\n      ].join(' ') + ')'\n  )\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/panzoom/lib/zoomTo.js\n ** module id = 66\n ** module chunks = 0\n **/","var parser = require('./domparser.js');\nvar svg = require('../');\n\nmodule.exports = compile;\n\nfunction compile(svgText) {\n  try {\n    svgText = addNamespaces(svgText);\n    return svg(parser.parseFromString(svgText, \"text/xml\").documentElement);\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction addNamespaces(text) {\n  if (!text) return;\n\n  var namespaces = 'xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\"';\n  var match = text.match(/^<\\w+/);\n  if (match) {\n    var tagLength = match[0].length;\n    return text.substr(0, tagLength) + ' ' + namespaces + ' ' + text.substr(tagLength);\n  } else {\n    throw new Error('Cannot parse input text: invalid xml?');\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplesvg/lib/compile.js\n ** module id = 67\n ** module chunks = 0\n **/","module.exports = template;\n\nvar BINDING_EXPR = /{{(.+?)}}/;\n\nfunction template(domNode) {\n  var allBindings = Object.create(null);\n  extractAllBindings(domNode, allBindings);\n\n  return {\n    link: function(model) {\n      Object.keys(allBindings).forEach(function(key) {\n        var setter = allBindings[key];\n        setter.forEach(changeModel);\n      });\n\n      function changeModel(setter) {\n        setter(model);\n      }\n    }\n  };\n}\n\nfunction extractAllBindings(domNode, allBindings) {\n  var nodeType = domNode.nodeType;\n  var typeSupported = (nodeType === 1) || (nodeType === 3);\n  if (!typeSupported) return;\n  var i;\n  if (domNode.hasChildNodes()) {\n    var domChildren = domNode.childNodes;\n    for (i = 0; i < domChildren.length; ++i) {\n      extractAllBindings(domChildren[i], allBindings);\n    }\n  }\n\n  if (nodeType === 3) { // text:\n    bindTextContent(domNode, allBindings);\n  }\n\n  if (!domNode.attributes) return; // this might be a text. Need to figure out what to do in that case\n\n  var attrs = domNode.attributes;\n  for (i = 0; i < attrs.length; ++i) {\n    bindDomAttribute(attrs[i], domNode, allBindings);\n  }\n}\n\nfunction bindDomAttribute(domAttribute, element, allBindings) {\n  var value = domAttribute.value;\n  if (!value) return; // unary attribute?\n\n  var modelNameMatch = value.match(BINDING_EXPR);\n  if (!modelNameMatch) return; // does not look like a binding\n\n  var attrName = domAttribute.localName;\n  var modelPropertyName = modelNameMatch[1];\n  var isSimpleValue = modelPropertyName.indexOf('.') < 0;\n\n  if (!isSimpleValue) throw new Error('simplesvg currently does not support nested bindings');\n\n  var propertyBindings = allBindings[modelPropertyName];\n  if (!propertyBindings) {\n    propertyBindings = allBindings[modelPropertyName] = [attributeSetter];\n  } else {\n    propertyBindings.push(attributeSetter);\n  }\n\n  function attributeSetter(model) {\n    element.setAttributeNS(null, attrName, model[modelPropertyName]);\n  }\n}\nfunction bindTextContent(element, allBindings) {\n  // todo reduce duplication\n  var value = element.nodeValue;\n  if (!value) return; // unary attribute?\n\n  var modelNameMatch = value.match(BINDING_EXPR);\n  if (!modelNameMatch) return; // does not look like a binding\n\n  var modelPropertyName = modelNameMatch[1];\n  var isSimpleValue = modelPropertyName.indexOf('.') < 0;\n\n  var propertyBindings = allBindings[modelPropertyName];\n  if (!propertyBindings) {\n    propertyBindings = allBindings[modelPropertyName] = [textSetter];\n  } else {\n    propertyBindings.push(textSetter);\n  }\n\n  function textSetter(model) {\n    element.nodeValue = model[modelPropertyName];\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplesvg/lib/compile_template.js\n ** module id = 68\n ** module chunks = 0\n **/","module.exports = createDomparser();\n\nfunction createDomparser() {\n  if (typeof DOMParser === 'undefined') {\n    return {\n      parseFromString: fail\n    };\n  }\n  return new DOMParser();\n}\n\nfunction fail() {\n  throw new Error('DOMParser is not supported by this platform. Please open issue here https://github.com/anvaka/simplesvg');\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplesvg/lib/domparser.js\n ** module id = 69\n ** module chunks = 0\n **/","module.exports = \"<div id=app> <scene :animation=animation></scene> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 70\n ** module chunks = 0\n **/","module.exports = \"<div class=scene-container v-el:container> <svg> <g v-el:scene> <path v-el=path stroke=black fill=transparent /> </g> </svg> <div class=editor> <a href=https://en.wikipedia.org/wiki/B%C3%A9zier_curve><h3>Bezier points</h3></a> <ul> <li v-for=\\\"item in animation\\\"> <label for={{item.name}}>{{item.name}}</label> <input type=text v-model=item.code id={{item.name}} v-on:change=updateAnimation(item)> </li> </ul> <code><pre>\\nfrom - angle where curve starts\\nto - angle where curve ends\\nalpha - animated angle\\n    </pre></code> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/Scene.vue\n ** module id = 71\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 72\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Scene.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Scene.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Scene.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Scene.vue\n ** module id = 73\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.22\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  queue.length = 0;\n  runBatcherQueue(userQueue);\n  // user watchers triggered more internal watchers\n  if (queue.length) {\n    runBatcherQueue(queue);\n  }\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.22';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 74\n ** module chunks = 0\n **/","/**\n * This module unifies handling of mouse whee event across different browsers\n *\n * See https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel?redirectlocale=en-US&redirectslug=DOM%2FMozilla_event_reference%2Fwheel\n * for more details\n *\n * Usage:\n *  var addWheelListener = require('wheel').addWheelListener;\n *  var removeWheelListener = require('wheel').removeWheelListener;\n *  addWheelListener(domElement, function (e) {\n *    // mouse wheel event\n *  });\n *  removeWheelListener(domElement, function);\n */\n// by default we shortcut to 'addEventListener':\n\nmodule.exports = addWheelListener;\n\n// But also expose \"advanced\" api with unsubscribe:\nmodule.exports.addWheelListener = addWheelListener;\nmodule.exports.removeWheelListener = removeWheelListener;\n\n\nvar prefix = \"\", _addEventListener, _removeEventListener, onwheel, support;\n\ndetectEventModel(typeof window !== 'undefined' && window,\n                typeof document !== 'undefined' && document);\n\nfunction addWheelListener( elem, callback, useCapture ) {\n    _addWheelListener( elem, support, callback, useCapture );\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n        _addWheelListener( elem, \"MozMousePixelScroll\", callback, useCapture );\n    }\n};\n\nfunction removeWheelListener( elem, callback, useCapture ) {\n    _removeWheelListener( elem, support, callback, useCapture );\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n        _removeWheelListener( elem, \"MozMousePixelScroll\", callback, useCapture );\n    }\n};\n\nfunction _addWheelListener( elem, eventName, callback, useCapture ) {\n  // TODO: in theory this anonymous function may result in incorrect\n  // unsubscription in some browsers. But in practice, I don't think we should\n  // worry too much about it (those browsers are on the way out)\n  elem[ _addEventListener ]( prefix + eventName, support == \"wheel\" ? callback : function( originalEvent ) {\n    !originalEvent && ( originalEvent = window.event );\n\n    // create a normalized event object\n    var event = {\n      // keep a ref to the original event object\n      originalEvent: originalEvent,\n      target: originalEvent.target || originalEvent.srcElement,\n      type: \"wheel\",\n      deltaMode: originalEvent.type == \"MozMousePixelScroll\" ? 0 : 1,\n      deltaX: 0,\n      delatZ: 0,\n      clientX: originalEvent.clientX,\n      clientY: originalEvent.clientY,\n      preventDefault: function() {\n        originalEvent.preventDefault ?\n            originalEvent.preventDefault() :\n            originalEvent.returnValue = false;\n      },\n      stopPropagation: function() {\n        if(originalEvent.stopPropagation)\n          originalEvent.stopPropagation();\n      },\n      stopImmediatePropagation: function() {\n        if(originalEvent.stopImmediatePropagation)\n          originalEvent.stopImmediatePropagation();\n      }\n    };\n\n    // calculate deltaY (and deltaX) according to the event\n    if ( support == \"mousewheel\" ) {\n      event.deltaY = - 1/40 * originalEvent.wheelDelta;\n      // Webkit also support wheelDeltaX\n      originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );\n    } else {\n      event.deltaY = originalEvent.detail;\n    }\n\n    // it's time to fire the callback\n    return callback( event );\n\n  }, useCapture || false );\n}\n\nfunction _removeWheelListener( elem, eventName, callback, useCapture ) {\n  elem[ _removeEventListener ]( prefix + eventName, callback, useCapture || false );\n}\n\nfunction detectEventModel(window, document) {\n  if ( window && window.addEventListener ) {\n      _addEventListener = \"addEventListener\";\n      _removeEventListener = \"removeEventListener\";\n  } else {\n      _addEventListener = \"attachEvent\";\n      _removeEventListener = \"detachEvent\";\n      prefix = \"on\";\n  }\n\n  if (document) {\n    // detect available wheel event\n    support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n              document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n              \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n  } else {\n    support = \"wheel\";\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/wheel/index.js\n ** module id = 75\n ** module chunks = 0\n **/"],"sourceRoot":""}